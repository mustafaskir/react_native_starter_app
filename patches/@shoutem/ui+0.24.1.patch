patch-package
--- a/node_modules/@shoutem/ui/components/LinearGradient.js
+++ b/node_modules/@shoutem/ui/components/LinearGradient.js
@@ -4,7 +4,7 @@ import _ from 'lodash';
 import { connectAnimation } from '@shoutem/animation';
 import { connectStyle } from '@shoutem/theme';
 
-const RNLinearGradientPropsKeys = Object.keys(RNLinearGradient.propTypes);
+const RNLinearGradientPropsKeys = Object.keys(RNLinearGradient);
 
 class LinearGradient extends PureComponent {
   render () {
deleted file mode 100644
--- a/node_modules/@shoutem/ui/node_modules/react-native-linear-gradient/.flowconfig
+++ /dev/null
@@ -1,32 +0,0 @@
-[ignore]
-
-# We fork some components by platform.
-.*/*.web.js
-.*/*.android.js
-
-# Some modules have their own node_modules with overlap
-.*/node_modules/node-haste/.*
-
-# Ignore react-tools where there are overlaps, but don't ignore anything that
-# react-native relies on
-.*/node_modules/react-tools/src/vendor/core/ExecutionEnvironment.js
-.*/node_modules/react-tools/src/browser/eventPlugins/ResponderEventPlugin.js
-.*/node_modules/react-tools/src/browser/ui/React.js
-.*/node_modules/react-tools/src/core/ReactInstanceHandles.js
-.*/node_modules/react-tools/src/event/EventPropagators.js
-.*/node_modules/flux/lib/invariant.js
-
-# Ignore jest
-.*/node_modules/jest-cli/.*
-
-# Ignore examples
-.*/Examples/.*
-
-[include]
-
-[libs]
-node_modules/react-native/Libraries/react-native/react-native-interface.js
-interfaces.js
-
-[options]
-module.system=haste
deleted file mode 100644
--- a/node_modules/@shoutem/ui/node_modules/react-native-linear-gradient/.gitattributes
+++ /dev/null
@@ -1,63 +0,0 @@
-###############################################################################
-# Set default behavior to automatically normalize line endings.
-###############################################################################
-* text=auto
-
-###############################################################################
-# Set default behavior for command prompt diff.
-#
-# This is need for earlier builds of msysgit that does not have it on by
-# default for csharp files.
-# Note: This is only used by command line
-###############################################################################
-#*.cs     diff=csharp
-
-###############################################################################
-# Set the merge driver for project and solution files
-#
-# Merging from the command prompt will add diff markers to the files if there
-# are conflicts (Merging from VS is not affected by the settings below, in VS
-# the diff markers are never inserted). Diff markers may cause the following 
-# file extensions to fail to load in VS. An alternative would be to treat
-# these files as binary and thus will always conflict and require user
-# intervention with every merge. To do so, just uncomment the entries below
-###############################################################################
-#*.sln       merge=binary
-#*.csproj    merge=binary
-#*.vbproj    merge=binary
-#*.vcxproj   merge=binary
-#*.vcproj    merge=binary
-#*.dbproj    merge=binary
-#*.fsproj    merge=binary
-#*.lsproj    merge=binary
-#*.wixproj   merge=binary
-#*.modelproj merge=binary
-#*.sqlproj   merge=binary
-#*.wwaproj   merge=binary
-
-###############################################################################
-# behavior for image files
-#
-# image files are treated as binary by default.
-###############################################################################
-#*.jpg   binary
-#*.png   binary
-#*.gif   binary
-
-###############################################################################
-# diff behavior for common document formats
-# 
-# Convert binary document formats to text before diffing them. This feature
-# is only available from the command line. Turn it on by uncommenting the 
-# entries below.
-###############################################################################
-#*.doc   diff=astextplain
-#*.DOC   diff=astextplain
-#*.docx  diff=astextplain
-#*.DOCX  diff=astextplain
-#*.dot   diff=astextplain
-#*.DOT   diff=astextplain
-#*.pdf   diff=astextplain
-#*.PDF   diff=astextplain
-#*.rtf   diff=astextplain
-#*.RTF   diff=astextplain
deleted file mode 100644
--- a/node_modules/@shoutem/ui/node_modules/react-native-linear-gradient/BVLinearGradient.podspec
+++ /dev/null
@@ -1,21 +0,0 @@
-require 'json'
-version = JSON.parse(File.read('package.json'))["version"]
-
-Pod::Spec.new do |s|
-
-  s.name            = "BVLinearGradient"
-  s.version         = version
-  s.homepage        = "https://github.com/brentvatne/react-native-linear-gradient"
-  s.summary         = "A <LinearGradient /> component for react-native"
-  s.license         = "MIT"
-  s.author          = { "Brent Vatne" => "brentvatne@gmail.com" }
-  s.ios.deployment_target = '7.0'
-  s.tvos.deployment_target = '9.0'
-  s.source          = { :git => "https://github.com/brentvatne/react-native-linear-gradient.git", :tag => "#{s.version}" }
-  s.source_files    = 'BVLinearGradient/*.{h,m}'
-  s.preserve_paths  = "**/*.js"
-  s.frameworks = 'UIKit', 'QuartzCore', 'Foundation'
-
-  s.dependency 'React'
-
-end
deleted file mode 100644
--- a/node_modules/@shoutem/ui/node_modules/react-native-linear-gradient/BVLinearGradient.xcodeproj/project.pbxproj
+++ /dev/null
@@ -1,393 +0,0 @@
-// !$*UTF8*$!
-{
-	archiveVersion = 1;
-	classes = {
-	};
-	objectVersion = 50;
-	objects = {
-
-/* Begin PBXBuildFile section */
-		64AA15111EF7F31200718508 /* BVLinearGradient.m in Sources */ = {isa = PBXBuildFile; fileRef = EF6045ED1C4E5D290001F552 /* BVLinearGradient.m */; };
-		64AA15121EF7F31200718508 /* BVLinearGradientManager.m in Sources */ = {isa = PBXBuildFile; fileRef = EF6045EF1C4E5D290001F552 /* BVLinearGradientManager.m */; };
-		D6BF2FA420D7DC1F006672AE /* BVLinearGradientLayer.m in Sources */ = {isa = PBXBuildFile; fileRef = D6BF2FA320D7DC1F006672AE /* BVLinearGradientLayer.m */; };
-		EF6045F01C4E5D290001F552 /* BVLinearGradient.m in Sources */ = {isa = PBXBuildFile; fileRef = EF6045ED1C4E5D290001F552 /* BVLinearGradient.m */; };
-		EF6045F11C4E5D290001F552 /* BVLinearGradientManager.m in Sources */ = {isa = PBXBuildFile; fileRef = EF6045EF1C4E5D290001F552 /* BVLinearGradientManager.m */; };
-/* End PBXBuildFile section */
-
-/* Begin PBXCopyFilesBuildPhase section */
-		58B511D91A9E6C8500147676 /* CopyFiles */ = {
-			isa = PBXCopyFilesBuildPhase;
-			buildActionMask = 2147483647;
-			dstPath = "include/$(PRODUCT_NAME)";
-			dstSubfolderSpec = 16;
-			files = (
-			);
-			runOnlyForDeploymentPostprocessing = 0;
-		};
-		64AA15061EF7F30100718508 /* CopyFiles */ = {
-			isa = PBXCopyFilesBuildPhase;
-			buildActionMask = 2147483647;
-			dstPath = "include/$(PRODUCT_NAME)";
-			dstSubfolderSpec = 16;
-			files = (
-			);
-			runOnlyForDeploymentPostprocessing = 0;
-		};
-/* End PBXCopyFilesBuildPhase section */
-
-/* Begin PBXFileReference section */
-		134814201AA4EA6300B7C361 /* libBVLinearGradient.a */ = {isa = PBXFileReference; explicitFileType = archive.ar; includeInIndex = 0; path = libBVLinearGradient.a; sourceTree = BUILT_PRODUCTS_DIR; };
-		64AA15081EF7F30100718508 /* libBVLinearGradient.a */ = {isa = PBXFileReference; explicitFileType = archive.ar; includeInIndex = 0; path = libBVLinearGradient.a; sourceTree = BUILT_PRODUCTS_DIR; };
-		D6BF2FA220D7DC1F006672AE /* BVLinearGradientLayer.h */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.c.h; path = BVLinearGradientLayer.h; sourceTree = "<group>"; };
-		D6BF2FA320D7DC1F006672AE /* BVLinearGradientLayer.m */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.c.objc; path = BVLinearGradientLayer.m; sourceTree = "<group>"; };
-		EF6045EC1C4E5D290001F552 /* BVLinearGradient.h */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.c.h; path = BVLinearGradient.h; sourceTree = "<group>"; };
-		EF6045ED1C4E5D290001F552 /* BVLinearGradient.m */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.c.objc; path = BVLinearGradient.m; sourceTree = "<group>"; };
-		EF6045EE1C4E5D290001F552 /* BVLinearGradientManager.h */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.c.h; path = BVLinearGradientManager.h; sourceTree = "<group>"; };
-		EF6045EF1C4E5D290001F552 /* BVLinearGradientManager.m */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.c.objc; path = BVLinearGradientManager.m; sourceTree = "<group>"; };
-/* End PBXFileReference section */
-
-/* Begin PBXFrameworksBuildPhase section */
-		58B511D81A9E6C8500147676 /* Frameworks */ = {
-			isa = PBXFrameworksBuildPhase;
-			buildActionMask = 2147483647;
-			files = (
-			);
-			runOnlyForDeploymentPostprocessing = 0;
-		};
-		64AA15051EF7F30100718508 /* Frameworks */ = {
-			isa = PBXFrameworksBuildPhase;
-			buildActionMask = 2147483647;
-			files = (
-			);
-			runOnlyForDeploymentPostprocessing = 0;
-		};
-/* End PBXFrameworksBuildPhase section */
-
-/* Begin PBXGroup section */
-		134814211AA4EA7D00B7C361 /* Products */ = {
-			isa = PBXGroup;
-			children = (
-				134814201AA4EA6300B7C361 /* libBVLinearGradient.a */,
-			);
-			name = Products;
-			sourceTree = "<group>";
-		};
-		58B511D21A9E6C8500147676 = {
-			isa = PBXGroup;
-			children = (
-				EF6045EB1C4E5D290001F552 /* BVLinearGradient */,
-				134814211AA4EA7D00B7C361 /* Products */,
-				64AA15081EF7F30100718508 /* libBVLinearGradient.a */,
-			);
-			sourceTree = "<group>";
-		};
-		EF6045EB1C4E5D290001F552 /* BVLinearGradient */ = {
-			isa = PBXGroup;
-			children = (
-				EF6045EC1C4E5D290001F552 /* BVLinearGradient.h */,
-				EF6045ED1C4E5D290001F552 /* BVLinearGradient.m */,
-				EF6045EE1C4E5D290001F552 /* BVLinearGradientManager.h */,
-				EF6045EF1C4E5D290001F552 /* BVLinearGradientManager.m */,
-				D6BF2FA220D7DC1F006672AE /* BVLinearGradientLayer.h */,
-				D6BF2FA320D7DC1F006672AE /* BVLinearGradientLayer.m */,
-			);
-			path = BVLinearGradient;
-			sourceTree = "<group>";
-		};
-/* End PBXGroup section */
-
-/* Begin PBXNativeTarget section */
-		58B511DA1A9E6C8500147676 /* BVLinearGradient */ = {
-			isa = PBXNativeTarget;
-			buildConfigurationList = 58B511EF1A9E6C8500147676 /* Build configuration list for PBXNativeTarget "BVLinearGradient" */;
-			buildPhases = (
-				58B511D71A9E6C8500147676 /* Sources */,
-				58B511D81A9E6C8500147676 /* Frameworks */,
-				58B511D91A9E6C8500147676 /* CopyFiles */,
-			);
-			buildRules = (
-			);
-			dependencies = (
-			);
-			name = BVLinearGradient;
-			productName = RCTDataManager;
-			productReference = 134814201AA4EA6300B7C361 /* libBVLinearGradient.a */;
-			productType = "com.apple.product-type.library.static";
-		};
-		64AA15071EF7F30100718508 /* BVLinearGradient-tvOS */ = {
-			isa = PBXNativeTarget;
-			buildConfigurationList = 64AA15101EF7F30100718508 /* Build configuration list for PBXNativeTarget "BVLinearGradient-tvOS" */;
-			buildPhases = (
-				64AA15041EF7F30100718508 /* Sources */,
-				64AA15051EF7F30100718508 /* Frameworks */,
-				64AA15061EF7F30100718508 /* CopyFiles */,
-			);
-			buildRules = (
-			);
-			dependencies = (
-			);
-			name = "BVLinearGradient-tvOS";
-			productName = "BVLinearGradient-tvOS";
-			productReference = 64AA15081EF7F30100718508 /* libBVLinearGradient.a */;
-			productType = "com.apple.product-type.library.static";
-		};
-/* End PBXNativeTarget section */
-
-/* Begin PBXProject section */
-		58B511D31A9E6C8500147676 /* Project object */ = {
-			isa = PBXProject;
-			attributes = {
-				LastUpgradeCheck = 1000;
-				ORGANIZATIONNAME = Facebook;
-				TargetAttributes = {
-					58B511DA1A9E6C8500147676 = {
-						CreatedOnToolsVersion = 6.1.1;
-					};
-					64AA15071EF7F30100718508 = {
-						CreatedOnToolsVersion = 8.3.3;
-						ProvisioningStyle = Automatic;
-					};
-				};
-			};
-			buildConfigurationList = 58B511D61A9E6C8500147676 /* Build configuration list for PBXProject "BVLinearGradient" */;
-			compatibilityVersion = "Xcode 9.3";
-			developmentRegion = English;
-			hasScannedForEncodings = 0;
-			knownRegions = (
-				en,
-			);
-			mainGroup = 58B511D21A9E6C8500147676;
-			productRefGroup = 58B511D21A9E6C8500147676;
-			projectDirPath = "";
-			projectRoot = "";
-			targets = (
-				58B511DA1A9E6C8500147676 /* BVLinearGradient */,
-				64AA15071EF7F30100718508 /* BVLinearGradient-tvOS */,
-			);
-		};
-/* End PBXProject section */
-
-/* Begin PBXSourcesBuildPhase section */
-		58B511D71A9E6C8500147676 /* Sources */ = {
-			isa = PBXSourcesBuildPhase;
-			buildActionMask = 2147483647;
-			files = (
-				EF6045F11C4E5D290001F552 /* BVLinearGradientManager.m in Sources */,
-				EF6045F01C4E5D290001F552 /* BVLinearGradient.m in Sources */,
-				D6BF2FA420D7DC1F006672AE /* BVLinearGradientLayer.m in Sources */,
-			);
-			runOnlyForDeploymentPostprocessing = 0;
-		};
-		64AA15041EF7F30100718508 /* Sources */ = {
-			isa = PBXSourcesBuildPhase;
-			buildActionMask = 2147483647;
-			files = (
-				64AA15111EF7F31200718508 /* BVLinearGradient.m in Sources */,
-				64AA15121EF7F31200718508 /* BVLinearGradientManager.m in Sources */,
-			);
-			runOnlyForDeploymentPostprocessing = 0;
-		};
-/* End PBXSourcesBuildPhase section */
-
-/* Begin XCBuildConfiguration section */
-		58B511ED1A9E6C8500147676 /* Debug */ = {
-			isa = XCBuildConfiguration;
-			buildSettings = {
-				ALWAYS_SEARCH_USER_PATHS = NO;
-				CLANG_CXX_LANGUAGE_STANDARD = "gnu++0x";
-				CLANG_CXX_LIBRARY = "libc++";
-				CLANG_ENABLE_MODULES = YES;
-				CLANG_ENABLE_OBJC_ARC = YES;
-				CLANG_WARN_BLOCK_CAPTURE_AUTORELEASING = YES;
-				CLANG_WARN_BOOL_CONVERSION = YES;
-				CLANG_WARN_COMMA = YES;
-				CLANG_WARN_CONSTANT_CONVERSION = YES;
-				CLANG_WARN_DEPRECATED_OBJC_IMPLEMENTATIONS = YES;
-				CLANG_WARN_DIRECT_OBJC_ISA_USAGE = YES_ERROR;
-				CLANG_WARN_EMPTY_BODY = YES;
-				CLANG_WARN_ENUM_CONVERSION = YES;
-				CLANG_WARN_INFINITE_RECURSION = YES;
-				CLANG_WARN_INT_CONVERSION = YES;
-				CLANG_WARN_NON_LITERAL_NULL_CONVERSION = YES;
-				CLANG_WARN_OBJC_IMPLICIT_RETAIN_SELF = YES;
-				CLANG_WARN_OBJC_LITERAL_CONVERSION = YES;
-				CLANG_WARN_OBJC_ROOT_CLASS = YES_ERROR;
-				CLANG_WARN_RANGE_LOOP_ANALYSIS = YES;
-				CLANG_WARN_STRICT_PROTOTYPES = YES;
-				CLANG_WARN_SUSPICIOUS_MOVE = YES;
-				CLANG_WARN_UNREACHABLE_CODE = YES;
-				CLANG_WARN__DUPLICATE_METHOD_MATCH = YES;
-				COPY_PHASE_STRIP = NO;
-				ENABLE_STRICT_OBJC_MSGSEND = YES;
-				ENABLE_TESTABILITY = YES;
-				GCC_C_LANGUAGE_STANDARD = gnu99;
-				GCC_DYNAMIC_NO_PIC = NO;
-				GCC_NO_COMMON_BLOCKS = YES;
-				GCC_OPTIMIZATION_LEVEL = 0;
-				GCC_PREPROCESSOR_DEFINITIONS = (
-					"DEBUG=1",
-					"$(inherited)",
-				);
-				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
-				GCC_WARN_64_TO_32_BIT_CONVERSION = YES;
-				GCC_WARN_ABOUT_RETURN_TYPE = YES_ERROR;
-				GCC_WARN_UNDECLARED_SELECTOR = YES;
-				GCC_WARN_UNINITIALIZED_AUTOS = YES_AGGRESSIVE;
-				GCC_WARN_UNUSED_FUNCTION = YES;
-				GCC_WARN_UNUSED_VARIABLE = YES;
-				IPHONEOS_DEPLOYMENT_TARGET = 9.0;
-				MTL_ENABLE_DEBUG_INFO = YES;
-				ONLY_ACTIVE_ARCH = YES;
-				SDKROOT = iphoneos;
-				TVOS_DEPLOYMENT_TARGET = 10.2;
-			};
-			name = Debug;
-		};
-		58B511EE1A9E6C8500147676 /* Release */ = {
-			isa = XCBuildConfiguration;
-			buildSettings = {
-				ALWAYS_SEARCH_USER_PATHS = NO;
-				CLANG_CXX_LANGUAGE_STANDARD = "gnu++0x";
-				CLANG_CXX_LIBRARY = "libc++";
-				CLANG_ENABLE_MODULES = YES;
-				CLANG_ENABLE_OBJC_ARC = YES;
-				CLANG_WARN_BLOCK_CAPTURE_AUTORELEASING = YES;
-				CLANG_WARN_BOOL_CONVERSION = YES;
-				CLANG_WARN_COMMA = YES;
-				CLANG_WARN_CONSTANT_CONVERSION = YES;
-				CLANG_WARN_DEPRECATED_OBJC_IMPLEMENTATIONS = YES;
-				CLANG_WARN_DIRECT_OBJC_ISA_USAGE = YES_ERROR;
-				CLANG_WARN_EMPTY_BODY = YES;
-				CLANG_WARN_ENUM_CONVERSION = YES;
-				CLANG_WARN_INFINITE_RECURSION = YES;
-				CLANG_WARN_INT_CONVERSION = YES;
-				CLANG_WARN_NON_LITERAL_NULL_CONVERSION = YES;
-				CLANG_WARN_OBJC_IMPLICIT_RETAIN_SELF = YES;
-				CLANG_WARN_OBJC_LITERAL_CONVERSION = YES;
-				CLANG_WARN_OBJC_ROOT_CLASS = YES_ERROR;
-				CLANG_WARN_RANGE_LOOP_ANALYSIS = YES;
-				CLANG_WARN_STRICT_PROTOTYPES = YES;
-				CLANG_WARN_SUSPICIOUS_MOVE = YES;
-				CLANG_WARN_UNREACHABLE_CODE = YES;
-				CLANG_WARN__DUPLICATE_METHOD_MATCH = YES;
-				COPY_PHASE_STRIP = YES;
-				ENABLE_NS_ASSERTIONS = NO;
-				ENABLE_STRICT_OBJC_MSGSEND = YES;
-				GCC_C_LANGUAGE_STANDARD = gnu99;
-				GCC_NO_COMMON_BLOCKS = YES;
-				GCC_WARN_64_TO_32_BIT_CONVERSION = YES;
-				GCC_WARN_ABOUT_RETURN_TYPE = YES_ERROR;
-				GCC_WARN_UNDECLARED_SELECTOR = YES;
-				GCC_WARN_UNINITIALIZED_AUTOS = YES_AGGRESSIVE;
-				GCC_WARN_UNUSED_FUNCTION = YES;
-				GCC_WARN_UNUSED_VARIABLE = YES;
-				IPHONEOS_DEPLOYMENT_TARGET = 9.0;
-				MTL_ENABLE_DEBUG_INFO = NO;
-				SDKROOT = iphoneos;
-				TVOS_DEPLOYMENT_TARGET = 10.2;
-				VALIDATE_PRODUCT = YES;
-			};
-			name = Release;
-		};
-		58B511F01A9E6C8500147676 /* Debug */ = {
-			isa = XCBuildConfiguration;
-			buildSettings = {
-				HEADER_SEARCH_PATHS = (
-					"$(inherited)",
-					/Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/include,
-					"$(SRCROOT)/../../React/**",
-					"$(SRCROOT)/../react-native/React/**",
-				);
-				LIBRARY_SEARCH_PATHS = "$(inherited)";
-				OTHER_LDFLAGS = "-ObjC";
-				PRODUCT_NAME = BVLinearGradient;
-				SKIP_INSTALL = YES;
-			};
-			name = Debug;
-		};
-		58B511F11A9E6C8500147676 /* Release */ = {
-			isa = XCBuildConfiguration;
-			buildSettings = {
-				HEADER_SEARCH_PATHS = (
-					"$(inherited)",
-					/Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/include,
-					"$(SRCROOT)/../../React/**",
-					"$(SRCROOT)/../react-native/React/**",
-				);
-				LIBRARY_SEARCH_PATHS = "$(inherited)";
-				OTHER_LDFLAGS = "-ObjC";
-				PRODUCT_NAME = BVLinearGradient;
-				SKIP_INSTALL = YES;
-			};
-			name = Release;
-		};
-		64AA150E1EF7F30100718508 /* Debug */ = {
-			isa = XCBuildConfiguration;
-			buildSettings = {
-				CLANG_ANALYZER_NONNULL = YES;
-				CLANG_ANALYZER_NUMBER_OBJECT_CONVERSION = YES_AGGRESSIVE;
-				CLANG_WARN_DOCUMENTATION_COMMENTS = YES;
-				CLANG_WARN_INFINITE_RECURSION = YES;
-				CLANG_WARN_SUSPICIOUS_MOVE = YES;
-				DEBUG_INFORMATION_FORMAT = dwarf;
-				ENABLE_TESTABILITY = YES;
-				GCC_NO_COMMON_BLOCKS = YES;
-				OTHER_LDFLAGS = "-ObjC";
-				PRODUCT_NAME = BVLinearGradient;
-				SDKROOT = appletvos;
-				SKIP_INSTALL = YES;
-			};
-			name = Debug;
-		};
-		64AA150F1EF7F30100718508 /* Release */ = {
-			isa = XCBuildConfiguration;
-			buildSettings = {
-				CLANG_ANALYZER_NONNULL = YES;
-				CLANG_ANALYZER_NUMBER_OBJECT_CONVERSION = YES_AGGRESSIVE;
-				CLANG_WARN_DOCUMENTATION_COMMENTS = YES;
-				CLANG_WARN_INFINITE_RECURSION = YES;
-				CLANG_WARN_SUSPICIOUS_MOVE = YES;
-				COPY_PHASE_STRIP = NO;
-				DEBUG_INFORMATION_FORMAT = "dwarf-with-dsym";
-				GCC_NO_COMMON_BLOCKS = YES;
-				OTHER_LDFLAGS = "-ObjC";
-				PRODUCT_NAME = BVLinearGradient;
-				SDKROOT = appletvos;
-				SKIP_INSTALL = YES;
-			};
-			name = Release;
-		};
-/* End XCBuildConfiguration section */
-
-/* Begin XCConfigurationList section */
-		58B511D61A9E6C8500147676 /* Build configuration list for PBXProject "BVLinearGradient" */ = {
-			isa = XCConfigurationList;
-			buildConfigurations = (
-				58B511ED1A9E6C8500147676 /* Debug */,
-				58B511EE1A9E6C8500147676 /* Release */,
-			);
-			defaultConfigurationIsVisible = 0;
-			defaultConfigurationName = Release;
-		};
-		58B511EF1A9E6C8500147676 /* Build configuration list for PBXNativeTarget "BVLinearGradient" */ = {
-			isa = XCConfigurationList;
-			buildConfigurations = (
-				58B511F01A9E6C8500147676 /* Debug */,
-				58B511F11A9E6C8500147676 /* Release */,
-			);
-			defaultConfigurationIsVisible = 0;
-			defaultConfigurationName = Release;
-		};
-		64AA15101EF7F30100718508 /* Build configuration list for PBXNativeTarget "BVLinearGradient-tvOS" */ = {
-			isa = XCConfigurationList;
-			buildConfigurations = (
-				64AA150E1EF7F30100718508 /* Debug */,
-				64AA150F1EF7F30100718508 /* Release */,
-			);
-			defaultConfigurationIsVisible = 0;
-			defaultConfigurationName = Release;
-		};
-/* End XCConfigurationList section */
-	};
-	rootObject = 58B511D31A9E6C8500147676 /* Project object */;
-}
deleted file mode 100644
--- a/node_modules/@shoutem/ui/node_modules/react-native-linear-gradient/BVLinearGradient/BVLinearGradient.h
+++ /dev/null
@@ -1,13 +0,0 @@
-#import <React/RCTView.h>
-
-@interface BVLinearGradient : RCTView
-
-@property (nullable, nonatomic, copy) NSArray<UIColor *> *colors;
-@property (nullable, nonatomic, copy) NSArray<NSNumber *> *locations;
-@property (nonatomic) CGPoint startPoint;
-@property (nonatomic) CGPoint endPoint;
-@property (nonatomic) BOOL useAngle;
-@property (nonatomic) CGPoint angleCenter;
-@property (nonatomic) CGFloat angle;
-
-@end
deleted file mode 100644
--- a/node_modules/@shoutem/ui/node_modules/react-native-linear-gradient/BVLinearGradient/BVLinearGradient.m
+++ /dev/null
@@ -1,104 +0,0 @@
-#import "BVLinearGradient.h"
-
-
-#import <React/RCTConvert.h>
-#import <UIKit/UIKit.h>
-#import <QuartzCore/QuartzCore.h>
-
-#import "BVLinearGradientLayer.h"
-
-@implementation BVLinearGradient
-
-+ (Class)layerClass
-{
-  return [BVLinearGradientLayer class];
-}
-
-- (BVLinearGradientLayer *)gradientLayer
-{
-  return (BVLinearGradientLayer *)self.layer;
-}
-
-- (NSArray *)colors
-{
-    return self.gradientLayer.colors;
-}
-
-- (void)setColors:(NSArray *)colorStrings
-{
-    NSMutableArray *colors = [NSMutableArray arrayWithCapacity:colorStrings.count];
-    for (NSString *colorString in colorStrings)
-    {
-        if ([colorString isKindOfClass:UIColor.class])
-        {
-            [colors addObject:(UIColor *)colorString];
-        }
-        else
-        {
-            [colors addObject:[RCTConvert UIColor:colorString]];
-        }
-    }
-    self.gradientLayer.colors = colors;
-}
-
-- (CGPoint)startPoint
-{
-    return self.gradientLayer.startPoint;
-}
-
-- (void)setStartPoint:(CGPoint)startPoint
-{
-  self.gradientLayer.startPoint = startPoint;
-}
-
-- (CGPoint)endPoint
-{
-    return self.gradientLayer.endPoint;
-}
-
-- (void)setEndPoint:(CGPoint)endPoint
-{
-  self.gradientLayer.endPoint = endPoint;
-}
-
-- (NSArray *)locations
-{
-    return self.gradientLayer.locations;
-}
-
-- (void)setLocations:(NSArray *)locations
-{
-    self.gradientLayer.locations = locations;
-}
-
-- (BOOL)useAngle
-{
-    return self.gradientLayer.useAngle;
-}
-    
-- (void)setUseAngle:(BOOL)useAngle
-{
-    self.gradientLayer.useAngle = useAngle;
-}
-
-- (CGPoint)angleCenter
-{
-    return self.gradientLayer.angleCenter;
-}
-    
-- (void)setAngleCenter:(CGPoint)angleCenter
-{
-    self.gradientLayer.angleCenter = angleCenter;
-}
-
-- (CGFloat)angle
-{
-    return self.gradientLayer.angle;
-}
-    
-- (void)setAngle:(CGFloat)angle
-{
-    self.gradientLayer.angle = angle;
-}
-
-@end
deleted file mode 100644
--- a/node_modules/@shoutem/ui/node_modules/react-native-linear-gradient/BVLinearGradient/BVLinearGradientLayer.h
+++ /dev/null
@@ -1,17 +0,0 @@
-#import <Foundation/Foundation.h>
-#import <QuartzCore/QuartzCore.h>
-
-@class UIColor;
-
-@interface BVLinearGradientLayer : CALayer
-
-@property (nullable, nonatomic, copy) NSArray<UIColor *> *colors;
-@property (nullable, nonatomic, copy) NSArray<NSNumber *> *locations;
-@property (nonatomic) CGPoint startPoint;
-@property (nonatomic) CGPoint endPoint;
-@property (nonatomic) BOOL useAngle;
-@property (nonatomic) CGPoint angleCenter;
-@property (nonatomic) CGFloat angle;
-
-@end
-
deleted file mode 100644
--- a/node_modules/@shoutem/ui/node_modules/react-native-linear-gradient/BVLinearGradient/BVLinearGradientLayer.m
+++ /dev/null
@@ -1,152 +0,0 @@
-#import "BVLinearGradientLayer.h"
-
-#import <UIKit/UIKit.h>
-
-@implementation BVLinearGradientLayer
-
-- (instancetype)init
-{
-    self = [super init];
-
-    if (self)
-    {
-        self.needsDisplayOnBoundsChange = YES;
-        self.masksToBounds = YES;
-        _startPoint = CGPointMake(0.5, 0.0);
-        _endPoint = CGPointMake(0.5, 1.0);
-        _angleCenter = CGPointMake(0.5, 0.5);
-        _angle = 45.0;
-    }
-
-    return self;
-}
-
-- (void)setColors:(NSArray<id> *)colors
-{
-    _colors = colors;
-    [self setNeedsDisplay];
-}
-
-- (void)setLocations:(NSArray<NSNumber *> *)locations
-{
-    _locations = locations;
-    [self setNeedsDisplay];
-}
-
-- (void)setStartPoint:(CGPoint)startPoint
-{
-    _startPoint = startPoint;
-    [self setNeedsDisplay];
-}
-
-- (void)setEndPoint:(CGPoint)endPoint
-{
-    _endPoint = endPoint;
-    [self setNeedsDisplay];
-}
-
-- (void)display {
-    [super display];
-
-    BOOL hasAlpha = NO;
-
-    for (NSInteger i = 0; i < self.colors.count; i++) {
-        hasAlpha = hasAlpha || CGColorGetAlpha(self.colors[i].CGColor) < 1.0;
-    }
-
-    UIGraphicsBeginImageContextWithOptions(self.bounds.size, !hasAlpha, 0.0);
-    CGContextRef ref = UIGraphicsGetCurrentContext();
-    [self drawInContext:ref];
-
-    UIImage *image = UIGraphicsGetImageFromCurrentImageContext();
-    self.contents = (__bridge id _Nullable)(image.CGImage);
-    self.contentsScale = image.scale;
-
-    UIGraphicsEndImageContext();
-}
-    
-- (void)setUseAngle:(BOOL)useAngle
-{
-    _useAngle = useAngle;
-    [self setNeedsDisplay];
-}
-
-- (void)setAngleCenter:(CGPoint)angleCenter
-{
-    _angleCenter = angleCenter;
-    [self setNeedsDisplay];
-}
-
-- (void)setAngle:(CGFloat)angle
-{
-    _angle = angle;
-    [self setNeedsDisplay];
-}
-
-- (CGSize)calculateGradientLocationWithAngle:(CGFloat)angle
-{
-    CGFloat angleRad = (angle - 90) * (M_PI / 180);
-    CGFloat length = sqrt(2);
-    
-    return CGSizeMake(cos(angleRad) * length, sin(angleRad) * length);
-}
-    
-- (void)drawInContext:(CGContextRef)ctx
-{
-    [super drawInContext:ctx];
-
-    CGContextSaveGState(ctx);
-
-    CGSize size = self.bounds.size;
-    if (!self.colors || self.colors.count == 0 || size.width == 0.0 || size.height == 0.0)
-        return;
-
-
-    CGFloat *locations = nil;
-
-    locations = malloc(sizeof(CGFloat) * self.colors.count);
-
-    for (NSInteger i = 0; i < self.colors.count; i++)
-    {
-        if (self.locations.count > i)
-        {
-            locations[i] = self.locations[i].floatValue;
-        }
-        else
-        {
-            locations[i] = (1.0 / (self.colors.count - 1)) * i;
-        }
-    }
-
-    CGColorSpaceRef colorSpace = CGColorSpaceCreateDeviceRGB();
-    NSMutableArray *colors = [[NSMutableArray alloc] initWithCapacity:self.colors.count];
-    for (UIColor *color in self.colors) {
-        [colors addObject:(id)color.CGColor];
-    }
-
-    CGGradientRef gradient = CGGradientCreateWithColors(colorSpace, (CFArrayRef)colors, locations);
-
-    free(locations);
-
-    CGPoint start = self.startPoint, end = self.endPoint;
-    
-    if (_useAngle)
-    {
-        CGSize size = [self calculateGradientLocationWithAngle:_angle];
-        start.x = _angleCenter.x - size.width / 2;
-        start.y = _angleCenter.y - size.height / 2;
-        end.x = _angleCenter.x + size.width / 2;
-        end.y = _angleCenter.y + size.height / 2;
-    }
-    
-    CGContextDrawLinearGradient(ctx, gradient,
-                                CGPointMake(start.x * size.width, start.y * size.height),
-                                CGPointMake(end.x * size.width, end.y * size.height),
-                                kCGGradientDrawsBeforeStartLocation | kCGGradientDrawsAfterEndLocation);
-    CGGradientRelease(gradient);
-    CGColorSpaceRelease(colorSpace);
-
-    CGContextRestoreGState(ctx);
-}
-
-@end
deleted file mode 100644
--- a/node_modules/@shoutem/ui/node_modules/react-native-linear-gradient/BVLinearGradient/BVLinearGradientManager.h
+++ /dev/null
@@ -1,5 +0,0 @@
-#import <React/RCTViewManager.h>
-
-@interface BVLinearGradientManager : RCTViewManager
-
-@end
deleted file mode 100644
--- a/node_modules/@shoutem/ui/node_modules/react-native-linear-gradient/BVLinearGradient/BVLinearGradientManager.m
+++ /dev/null
@@ -1,29 +0,0 @@
-#import "BVLinearGradientManager.h"
-#import "BVLinearGradient.h"
-#import <React/RCTBridge.h>
-
-@implementation BVLinearGradientManager
-
-RCT_EXPORT_MODULE();
-
-@synthesize bridge = _bridge;
-
-- (UIView *)view
-{
-  return [[BVLinearGradient alloc] init];
-}
-
-- (dispatch_queue_t)methodQueue
-{
-    return dispatch_get_main_queue();
-}
-
-RCT_EXPORT_VIEW_PROPERTY(colors, NSArray);
-RCT_EXPORT_VIEW_PROPERTY(startPoint, CGPoint);
-RCT_EXPORT_VIEW_PROPERTY(endPoint, CGPoint);
-RCT_EXPORT_VIEW_PROPERTY(locations, NSArray);
-RCT_EXPORT_VIEW_PROPERTY(useAngle, BOOL);
-RCT_EXPORT_VIEW_PROPERTY(angleCenter, CGPoint);
-RCT_EXPORT_VIEW_PROPERTY(angle, CGFloat);
-
-@end
deleted file mode 100644
--- a/node_modules/@shoutem/ui/node_modules/react-native-linear-gradient/CHANGELOG.md
+++ /dev/null
@@ -1,19 +0,0 @@
-# ChangeLog
-
-## Unreleased
-
-## 2.4.4 - 2018-11-16
-
-- Added support for angled gradient (iOS and Android)
-
-## 2.4.3 - 2018-10-30
-
-- Rename start & end properties to fix conflict with RN 51
-- Check for ext property on Android gradle module
-- Setup dynamic version for Android SDK
-- Bump Android build tools and SDK version
-- Added TypeScript Typings
-- Bump target sdk
-- Use react native version that parent specifies
-- fixed lint
-- bump Android libs
deleted file mode 100644
--- a/node_modules/@shoutem/ui/node_modules/react-native-linear-gradient/LICENSE
+++ /dev/null
@@ -1,21 +0,0 @@
-MIT License
-
-Copyright (c) 2016 React Native Community
-
-Permission is hereby granted, free of charge, to any person obtaining a copy
-of this software and associated documentation files (the "Software"), to deal
-in the Software without restriction, including without limitation the rights
-to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
-copies of the Software, and to permit persons to whom the Software is
-furnished to do so, subject to the following conditions:
-
-The above copyright notice and this permission notice shall be included in all
-copies or substantial portions of the Software.
-
-THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
-IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
-FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
-AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
-LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
-OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
-SOFTWARE.
deleted file mode 100644
--- a/node_modules/@shoutem/ui/node_modules/react-native-linear-gradient/README.md
+++ /dev/null
@@ -1,221 +0,0 @@
-
-[![Version](https://img.shields.io/npm/v/react-native-linear-gradient.svg)](https://www.npmjs.com/package/react-native-linear-gradient)
-[![NPM](https://img.shields.io/npm/dm/react-native-linear-gradient.svg)](https://www.npmjs.com/package/react-native-linear-gradient)
-
-# react-native-linear-gradient
-
-A `<LinearGradient>` component for react-native, as seen in
-[react-native-login](https://github.com/brentvatne/react-native-login).
-
-Version 2.0 supports react-native >= 0.40.0
-
-## Add it to your project
-
-You can try linking the project automatically:
-
-`$ react-native link react-native-linear-gradient`
-
-or do it manually as described below:
-
-### iOS
-
-- Run `npm install react-native-linear-gradient --save`
-
-Then either:
-
-##### Cocoapods
-add the following line to your Podfile:
-
-```sh
-pod 'React', :path => '../node_modules/react-native'
-pod 'BVLinearGradient', :path => '../node_modules/react-native-linear-gradient'
-```
-
-or:
-
-##### Manually
-
-1. Open your project in XCode, right click on `Libraries` and click `Add
-   Files to "Your Project Name"` Look under `node_modules/react-native-linear-gradient` and add `BVLinearGradient.xcodeproj`.  [(Screenshot)](http://url.brentvatne.ca/g9Wp).
-2. Add `libBVLinearGradient.a` to `Build Phases -> Link Binary With Libraries`
-   [(Screenshot)](http://url.brentvatne.ca/g9Wp).
-3. Click on `BVLinearGradient.xcodeproj` in `Libraries` and go the `Build
-   Settings` tab. Double click the text to the right of `Header Search
-   Paths` and verify that it has `$(SRCROOT)/../react-native/React` - if it
-   isn't, then add it. This is so XCode is able to find the headers that
-   the `BVLinearGradient` source files are referring to by pointing to the
-   header files installed within the `react-native` `node_modules`
-   directory. [(Screenshot)](http://url.brentvatne.ca/7wE0).
-
-Then:
-
-
-- Whenever you want to use it within React code now you can: `import LinearGradient from 'react-native-linear-gradient';`
-
-
-**If you're having trouble, you can point your `package.json` at github to see if the issue has been fixed.  Simply change the dependency**
-
-`"react-native-linear-gradient": "react-native-community/react-native-linear-gradient",`
-
-**to get the data right from github instead of npm and then `npm install`**
-
-For instance the podspec file does not contain the right data (author attributes etc..) in npm while it does in the github repo.
-
-#### Android
-
-- Run `npm install react-native-linear-gradient --save`
-
-Then:
-
-1. in `android/settings.gradle`
-```
-...
-include ':react-native-linear-gradient'
-project(':react-native-linear-gradient').projectDir = new File(rootProject.projectDir, '../node_modules/react-native-linear-gradient/android')
-```
-
-2. in `android/app/build.gradle` add:
-```
-dependencies {
-    ...
-    compile project(':react-native-linear-gradient')
-}
-```
-
-3. and finally, in `android/app/src/main/java/com/{YOUR_APP_NAME}/MainActivity.java` for react-native < 0.29,
-   or `android/app/src/main/java/com/{YOUR_APP_NAME}/MainApplication.java` for react-native >= 0.29 add:
-```java
-//...
-import com.BV.LinearGradient.LinearGradientPackage; // <--- This!
-//...
-@Override
-protected List<ReactPackage> getPackages() {
-  return Arrays.<ReactPackage>asList(
-    new MainReactPackage(),
-    new LinearGradientPackage() // <---- and This!
-  );
-}
-```
-
-### Windows (WPF)
-
-1. in `windows/MyApp.sln` Add -> Existing Project: `node_modules/react-native-linear-gradient/windows/LinearGradientWPF/LinearGradientWPF.csproj`
-
-2. in `windows/MyApp/MyAppWPF/MyAppWPF.csproj` Add -> Reference -> LinearGradientWPF
-
-3. in `windows/MyApp/MyAppWPF/AppReactPage.cs` add: `using LinearGradient;`
-  and
-  ```csharp
-  public override List<IReactPackage> Packages => new List<IReactPackage>
-  {
-    ...
-    new LinearGradientPackage()
-  }
-  ```
-
-
-## Examples
-
-### Simple
-
-The following code will produce something like this:
-
-![Example code result](https://raw.githubusercontent.com/react-native-community/react-native-linear-gradient/master/images/example.png)
-
-```javascript
-import LinearGradient from 'react-native-linear-gradient';
-
-// Within your render function
-<LinearGradient colors={['#4c669f', '#3b5998', '#192f6a']} style={styles.linearGradient}>
-  <Text style={styles.buttonText}>
-    Sign in with Facebook
-  </Text>
-</LinearGradient>
-
-// Later on in your styles..
-var styles = StyleSheet.create({
-  linearGradient: {
-    flex: 1,
-    paddingLeft: 15,
-    paddingRight: 15,
-    borderRadius: 5
-  },
-  buttonText: {
-    fontSize: 18,
-    fontFamily: 'Gill Sans',
-    textAlign: 'center',
-    margin: 10,
-    color: '#ffffff',
-    backgroundColor: 'transparent',
-  },
-});
-```
-
-### Horizontal gradient
-
-Using the styles from above, set `start` and `end` like this to make the gradient go from left to right, instead of from top to bottom:
-
-```javascript
-<LinearGradient start={{x: 0, y: 0}} end={{x: 1, y: 0}} colors={['#4c669f', '#3b5998', '#192f6a']} style={styles.linearGradient}>
-  <Text style={styles.buttonText}>
-    Sign in with Facebook
-  </Text>
-</LinearGradient>
-```
-
-### Additional props
-In addition to regular `View` props, you can also provide additional props to customize your gradient look:
-
-#### colors
-An array of at least two color values that represent gradient colors. Example: `['red', 'blue']` sets gradient from red to blue.
-  
-#### start
-An optional object of the following type: `{ x: number, y: number }`. Coordinates declare the position that the gradient starts at, as a fraction of the overall size of the gradient, starting from the top left corner. Example: `{ x: 0.1, y: 0.1 }` means that the gradient will start 10% from the top and 10% from the left.
- 
-#### end
-Same as start, but for the end of the gradient.
- 
-#### locations
-An optional array of numbers defining the location of each gradient color stop, mapping to the color with the same index in `colors` prop. Example: `[0.1, 0.75, 1]` means that first color will take 0% - 10%, second color will take 10% - 75% and finally third color will occupy 75% - 100%.
-
-```javascript
-<LinearGradient
-  start={{x: 0.0, y: 0.25}} end={{x: 0.5, y: 1.0}}
-  locations={[0,0.5,0.6]}
-  colors={['#4c669f', '#3b5998', '#192f6a']}
-  style={styles.linearGradient}>
-  <Text style={styles.buttonText}>
-    Sign in with Facebook
-  </Text>
-</LinearGradient>
-```
-
-![Example with extra props](https://raw.githubusercontent.com/react-native-community/react-native-linear-gradient/master/images/example-other-props.png)
- 
-#### useAngle / angle / angleCenter
-You may want to achieve an angled gradient effect, similar to those in image editors like Photoshop.  
-One issue is that you have to calculate the angle based on the view's size, which only happens asynchronously and will cause unwanted flickr.
-
-In order to do that correctly you can set `{ useAngle: true, angle: 45, angleCenter: { x: 0.5, y: 0.5} }`, to achieve a gradient with a 45 degrees angle, with its center positioned in the view's exact center.
-
-`useAngle` is used to turn on/off angle based calculation (as opposed to `start`/`end`).  
-`angle` is the angle in degrees.  
-`angleCenter` is the center point of the angle (will control the weight and stretch of the gradient like it does in photoshop.
-
-### Updating the values for fun
-
-Check out [Examples/AnimatedGradient](https://github.com/react-native-community/react-native-linear-gradient/blob/master/Examples/AnimatedGradient/src/index.js) (`git clone` this project, cd into it, npm install, open in XCode and run) to see how this is done:
-
-![Example with extra props](https://raw.githubusercontent.com/react-native-community/react-native-linear-gradient/master/images/example-animated.gif)
-
-*This gif was created using [licecap](http://www.cockos.com/licecap/) - a great piece of free OSS*
-
-### An example app
-You can see this component in action in [brentvatne/react-native-login](https://github.com/brentvatne/react-native-login/blob/master/App/Screens/LoginScreen.js#L58-L62).
-
-### Other platforms
-- Web: [react-native-web-community/react-native-web-linear-gradient](https://github.com/react-native-web-community/react-native-web-linear-gradient)
-
-### License
-
-License is MIT
deleted file mode 100644
--- a/node_modules/@shoutem/ui/node_modules/react-native-linear-gradient/android/build.gradle
+++ /dev/null
@@ -1,22 +0,0 @@
-apply plugin: 'com.android.library'
-
-def DEFAULT_COMPILE_SDK_VERSION             = 26
-def DEFAULT_BUILD_TOOLS_VERSION             = "26.0.3"
-def DEFAULT_MIN_SDK_VERSION                 = 16
-def DEFAULT_TARGET_SDK_VERSION              = 26
-
-android {
-    compileSdkVersion rootProject.hasProperty('compileSdkVersion') ? rootProject.compileSdkVersion : DEFAULT_COMPILE_SDK_VERSION
-    buildToolsVersion rootProject.hasProperty('buildToolsVersion') ? rootProject.buildToolsVersion : DEFAULT_BUILD_TOOLS_VERSION
-
-    defaultConfig {
-        minSdkVersion rootProject.hasProperty('minSdkVersion') ? rootProject.minSdkVersion : DEFAULT_MIN_SDK_VERSION
-        targetSdkVersion rootProject.hasProperty('targetSdkVersion') ? rootProject.targetSdkVersion : DEFAULT_TARGET_SDK_VERSION
-        versionCode 1
-        versionName "1.0"
-    }
-}
-
-dependencies {
-    compileOnly "com.facebook.react:react-native:+"
-}
deleted file mode 100644
--- a/node_modules/@shoutem/ui/node_modules/react-native-linear-gradient/android/src/main/AndroidManifest.xml
+++ /dev/null
@@ -1,3 +0,0 @@
-<manifest xmlns:android="http://schemas.android.com/apk/res/android"
-    package="com.BV.LinearGradient">
-</manifest>
deleted file mode 100644
--- a/node_modules/@shoutem/ui/node_modules/react-native-linear-gradient/android/src/main/java/com/BV/LinearGradient/LinearGradientManager.java
+++ /dev/null
@@ -1,76 +0,0 @@
-package com.BV.LinearGradient;
-
-import com.facebook.react.bridge.ReadableArray;
-import com.facebook.react.uimanager.annotations.ReactProp;
-import com.facebook.react.uimanager.PixelUtil;
-import com.facebook.react.uimanager.SimpleViewManager;
-import com.facebook.react.uimanager.ThemedReactContext;
-
-import android.view.View;
-
-public class LinearGradientManager extends SimpleViewManager<LinearGradientView> {
-
-    public static final String REACT_CLASS = "BVLinearGradient";
-    public static final String PROP_COLORS = "colors";
-    public static final String PROP_LOCATIONS = "locations";
-    public static final String PROP_START_POS = "startPoint";
-    public static final String PROP_END_POS = "endPoint";
-    public static final String PROP_USE_ANGLE = "useAngle";
-    public static final String PROP_ANGLE_CENTER = "angleCenter";
-    public static final String PROP_ANGLE = "angle";
-    public static final String PROP_BORDER_RADII = "borderRadii";
-
-    @Override
-    public String getName() {
-        return REACT_CLASS;
-    }
-
-    @Override
-    protected LinearGradientView createViewInstance(ThemedReactContext context) {
-        return new LinearGradientView(context);
-    }
-
-    @ReactProp(name=PROP_COLORS)
-    public void setColors(LinearGradientView gradientView, ReadableArray colors) {
-        gradientView.setColors(colors);
-    }
-
-    @ReactProp(name=PROP_LOCATIONS)
-    public void setLocations(LinearGradientView gradientView, ReadableArray locations) {
-        if (locations != null) {
-            gradientView.setLocations(locations);
-        }
-    }
-
-    @ReactProp(name=PROP_START_POS)
-    public void setStartPosition(LinearGradientView gradientView, ReadableArray startPos) {
-        gradientView.setStartPosition(startPos);
-    }
-
-    @ReactProp(name=PROP_END_POS)
-    public void setEndPosition(LinearGradientView gradientView, ReadableArray endPos) {
-        gradientView.setEndPosition(endPos);
-    }
-
-    @ReactProp(name=PROP_USE_ANGLE, defaultBoolean = false)
-    public void setUseAngle(LinearGradientView gradientView, boolean useAngle) {
-        gradientView.setUseAngle(useAngle);
-    }
-
-    @ReactProp(name=PROP_ANGLE_CENTER)
-    public void setAngleCenter(LinearGradientView gradientView, ReadableArray in) {
-        gradientView.setAngleCenter(in);
-    }
-
-    @ReactProp(name=PROP_ANGLE, defaultFloat = 45.0f)
-    public void setAngle(LinearGradientView gradientView, float angle) {
-        gradientView.setAngle(angle);
-    }
-
-    // temporary solution until following issue is resolved:
-    // https://github.com/facebook/react-native/issues/3198
-    @ReactProp(name=PROP_BORDER_RADII)
-    public void setBorderRadii(LinearGradientView gradientView, ReadableArray borderRadii) {
-        gradientView.setBorderRadii(borderRadii);
-    }
-}
deleted file mode 100644
--- a/node_modules/@shoutem/ui/node_modules/react-native-linear-gradient/android/src/main/java/com/BV/LinearGradient/LinearGradientPackage.java
+++ /dev/null
@@ -1,30 +0,0 @@
-package com.BV.LinearGradient;
-
-import com.facebook.react.ReactPackage;
-import com.facebook.react.bridge.JavaScriptModule;
-import com.facebook.react.bridge.NativeModule;
-import com.facebook.react.bridge.ReactApplicationContext;
-import com.facebook.react.uimanager.ViewManager;
-
-import java.util.Arrays;
-import java.util.Collections;
-import java.util.List;
-
-public class LinearGradientPackage implements ReactPackage {
-
-    @Override
-    public List<NativeModule> createNativeModules(ReactApplicationContext reactContext) {
-        return Collections.emptyList();
-    }
-
-    // Deprecated RN 0.47
-    public List<Class<? extends JavaScriptModule>> createJSModules() {
-        return Collections.emptyList();
-    }
-
-    @Override
-    public List<ViewManager> createViewManagers(ReactApplicationContext reactContext) {
-        return Arrays.<ViewManager>asList(
-            new LinearGradientManager());
-    }
-}
deleted file mode 100644
--- a/node_modules/@shoutem/ui/node_modules/react-native-linear-gradient/android/src/main/java/com/BV/LinearGradient/LinearGradientView.java
+++ /dev/null
@@ -1,164 +0,0 @@
-package com.BV.LinearGradient;
-
-import com.facebook.react.bridge.ReadableArray;
-import com.facebook.react.uimanager.PixelUtil;
-
-import android.content.Context;
-import android.graphics.Canvas;
-import android.graphics.LinearGradient;
-import android.graphics.Paint;
-import android.graphics.Path;
-import android.graphics.RectF;
-import android.graphics.Shader;
-import android.view.View;
-
-public class LinearGradientView extends View {
-
-    private final Paint mPaint = new Paint(Paint.ANTI_ALIAS_FLAG);
-    private Path mPathForBorderRadius;
-    private RectF mTempRectForBorderRadius;
-    private LinearGradient mShader;
-
-    private float[] mLocations;
-    private float[] mStartPos = {0, 0};
-    private float[] mEndPos = {0, 1};
-    private int[] mColors;
-    private boolean mUseAngle = false;
-    private float[] mAngleCenter = new float[]{0.5f, 0.5f};
-    private float mAngle = 45f;
-    private int[] mSize = {0, 0};
-    private float[] mBorderRadii = {0, 0, 0, 0, 0, 0, 0, 0};
-
-
-    public LinearGradientView(Context context) {
-        super(context);
-    }
-
-    public void setStartPosition(ReadableArray startPos) {
-        mStartPos = new float[]{(float) startPos.getDouble(0), (float) startPos.getDouble(1)};
-        drawGradient();
-    }
-
-    public void setEndPosition(ReadableArray endPos) {
-        mEndPos = new float[]{(float) endPos.getDouble(0), (float) endPos.getDouble(1)};
-        drawGradient();
-    }
-
-    public void setColors(ReadableArray colors) {
-        int[] _colors = new int[colors.size()];
-        for (int i=0; i < _colors.length; i++)
-        {
-            _colors[i] = colors.getInt(i);
-        }
-        mColors = _colors;
-        drawGradient();
-    }
-
-    public void setLocations(ReadableArray locations) {
-        float[] _locations = new float[locations.size()];
-        for (int i=0; i < _locations.length; i++)
-        {
-            _locations[i] = (float) locations.getDouble(i);
-        }
-        mLocations = _locations;
-        drawGradient();
-    }
-
-    public void setUseAngle(boolean useAngle) {
-        mUseAngle = useAngle;
-        drawGradient();
-    }
-
-    public void setAngleCenter(ReadableArray in) {
-        mAngleCenter = new float[]{(float) in.getDouble(0), (float) in.getDouble(1)};
-        drawGradient();
-    }
-
-    public void setAngle(float angle) {
-        mAngle = angle;
-        drawGradient();
-    }
-
-    public void setBorderRadii(ReadableArray borderRadii) {
-        float[] _radii = new float[borderRadii.size()];
-        for (int i=0; i < _radii.length; i++)
-        {
-            _radii[i] = PixelUtil.toPixelFromDIP((float) borderRadii.getDouble(i));
-        }
-        mBorderRadii = _radii;
-        updatePath();
-        drawGradient();
-    }
-
-    @Override
-    protected void onSizeChanged(int w, int h, int oldw, int oldh) {
-        mSize = new int[]{w, h};
-        updatePath();
-        drawGradient();
-    }
-
-    private float[] calculateGradientLocationWithAngle(float angle) {
-        float angleRad = (angle - 90.0f) * ((float)Math.PI / 180.0f);
-        float length = (float)Math.sqrt(2.0);
-
-        return new float[]{
-                (float) Math.cos(angleRad) * length,
-                (float) Math.sin(angleRad) * length
-        };
-    }
-
-    private void drawGradient() {
-        // guard against crashes happening while multiple properties are updated
-        if (mColors == null || (mLocations != null && mColors.length != mLocations.length))
-            return;
-
-        float[] startPos = mStartPos;
-        float[] endPos = mEndPos;
-
-        if (mUseAngle && mAngleCenter != null) {
-            float[] angleSize = calculateGradientLocationWithAngle(mAngle);
-            startPos = new float[]{
-                    mAngleCenter[0] - angleSize[0] / 2.0f,
-                    mAngleCenter[1] - angleSize[1] / 2.0f
-            };
-            endPos = new float[]{
-                    mAngleCenter[0] + angleSize[0] / 2.0f,
-                    mAngleCenter[1] + angleSize[1] / 2.0f
-            };
-        }
-
-        mShader = new LinearGradient(
-                startPos[0] * mSize[0],
-                startPos[1] * mSize[1],
-                endPos[0] * mSize[0],
-                endPos[1] * mSize[1],
-            mColors,
-            mLocations,
-            Shader.TileMode.CLAMP);
-        mPaint.setShader(mShader);
-        invalidate();
-    }
-
-    private void updatePath() {
-        if (mPathForBorderRadius == null) {
-            mPathForBorderRadius = new Path();
-            mTempRectForBorderRadius = new RectF();
-        }
-        mPathForBorderRadius.reset();
-        mTempRectForBorderRadius.set(0f, 0f, (float) mSize[0], (float) mSize[1]);
-        mPathForBorderRadius.addRoundRect(
-            mTempRectForBorderRadius,
-            mBorderRadii,
-            Path.Direction.CW);
-    }
-
-    @Override
-    protected void onDraw(Canvas canvas) {
-        super.onDraw(canvas);
-        if (mPathForBorderRadius == null) {
-            canvas.drawPaint(mPaint);
-        } else {
-            canvas.drawPath(mPathForBorderRadius, mPaint);
-        }
-    }
-}
deleted file mode 100644
--- a/node_modules/@shoutem/ui/node_modules/react-native-linear-gradient/index.android.js
+++ /dev/null
@@ -1,135 +0,0 @@
-/**
- * @providesModule LinearGradient
- * @flow
- */
-import React, { Component } from 'react';
-import PropTypes from 'prop-types';
-import { processColor, PointPropType, StyleSheet, View, ViewPropTypes } from 'react-native';
-import type { ViewProps } from 'react-native/Libraries/Components/View/ViewPropTypes';
-const deprecatedPropType = require('react-native/Libraries/Utilities/deprecatedPropType.js');
-const ColorPropType = require('react-native/Libraries/StyleSheet/ColorPropType.js');
-
-import NativeLinearGradient from './nativeLinearGradient';
-
-const convertPoint = (name, point) => {
-  if (Array.isArray(point)) {
-    console.warn(
-      `LinearGradient '${name}' property should be an object with fields 'x' and 'y', ` +
-      'Array type is deprecated.'
-    );
-  }
-  if (point !== null && typeof point === 'object') {
-    return [point.x, point.y];
-  }
-  return point;
-};
-
-type PropsType = {
-  start?: Array<number> | {x: number, y: number};
-  end?: Array<number> | {x: number, y: number};
-  colors: Array<string>;
-  locations?: Array<number>;
-  useAngle?: boolean;
-  angleCenter?: {x: number, y: number};
-  angle?: number;
-} & ViewProps;
-
-/**
- * Checks if value is a valid number. Otherwise, defaults to defaultValue.
- * 
- * @param {number} defaultValue 
- */
-const validNumber = (defaultValue) => (value) => {
-  return typeof value === 'number' ? value : defaultValue;
-};
-
-export default class LinearGradient extends Component {
-  static propTypes = {
-    start: PropTypes.oneOfType([
-      PointPropType,
-      deprecatedPropType(
-        PropTypes.arrayOf(PropTypes.number),
-        'Use point object with {x, y} instead.'
-      )
-    ]),
-    end: PropTypes.oneOfType([
-      PointPropType,
-      deprecatedPropType(
-        PropTypes.arrayOf(PropTypes.number),
-        'Use point object with {x, y} instead.'
-      )
-    ]),
-    colors: PropTypes.arrayOf(ColorPropType).isRequired,
-    locations: PropTypes.arrayOf(PropTypes.number),
-    useAngle: PropTypes.bool,
-    angleCenter: PointPropType,
-    angle: PropTypes.number,
-    ...ViewPropTypes,
-  };
-  props: PropsType;
-  gradientRef: any;
-
-  static defaultProps = {
-    start: { x: 0.5, y: 0.0 },
-    end: { x: 0.5, y: 1.0 },
-  };
-
-  setNativeProps(props: PropsType) {
-    this.gradientRef.setNativeProps(props);
-  }
-
-  render() {
-    const {
-      children,
-      colors,
-      end,
-      locations,
-      useAngle,
-      angleCenter,
-      angle,
-      start,
-      style,
-      ...otherProps
-    } = this.props;
-
-    if ((colors && locations) && (colors.length !== locations.length)) {
-      console.warn('LinearGradient colors and locations props should be arrays of the same length');
-    }
-
-    // inherit container borderRadius until this issue is resolved:
-    // https://github.com/facebook/react-native/issues/3198
-    const flatStyle = StyleSheet.flatten(style) || {};
-    const borderRadius = flatStyle.borderRadius || 0;
-    const validRadius = validNumber(borderRadius);
-
-    // this is the format taken by:
-    // http://developer.android.com/reference/android/graphics/Path.html#addRoundRect(android.graphics.RectF, float[], android.graphics.Path.Direction)
-    const borderRadiiPerCorner = [
-      validRadius(flatStyle.borderTopLeftRadius),
-      validRadius(flatStyle.borderTopLeftRadius),
-      validRadius(flatStyle.borderTopRightRadius),
-      validRadius(flatStyle.borderTopRightRadius),
-      validRadius(flatStyle.borderBottomRightRadius),
-      validRadius(flatStyle.borderBottomRightRadius),
-      validRadius(flatStyle.borderBottomLeftRadius),
-      validRadius(flatStyle.borderBottomLeftRadius)
-    ];
-
-    return (
-      <View ref={(component) => { this.gradientRef = component; }} {...otherProps} style={style}>
-        <NativeLinearGradient
-          style={{position: 'absolute', top: 0, left: 0, bottom: 0, right: 0}}
-          colors={colors.map(processColor)}
-          startPoint={convertPoint('start', start)}
-          endPoint={convertPoint('end', end)}
-          locations={locations ? locations.slice(0, colors.length) : null}
-          useAngle={useAngle}
-          angleCenter={convertPoint('angleCenter', angleCenter)}
-          angle={angle}
-          borderRadii={borderRadiiPerCorner}
-        />
-        { children }
-      </View>
-    );
-  }
-}
deleted file mode 100644
--- a/node_modules/@shoutem/ui/node_modules/react-native-linear-gradient/index.d.ts
+++ /dev/null
@@ -1,18 +0,0 @@
-declare module 'react-native-linear-gradient' {
-  import * as React from 'react';
-  import * as ReactNative from 'react-native';
-
-  export interface LinearGradientProps extends ReactNative.ViewProps {
-    colors: (string | number)[];
-    start?: { x: number; y: number };
-    end?: { x: number; y: number };
-    locations?: number[];
-    useAngle?: boolean;
-    angleCenter?: {x: number, y: number};
-    angle?: number;
-  }
-
-  export class LinearGradient extends React.Component<LinearGradientProps> {}
-
-  export default LinearGradient;
-}
deleted file mode 100644
--- a/node_modules/@shoutem/ui/node_modules/react-native-linear-gradient/index.ios.js
+++ /dev/null
@@ -1,103 +0,0 @@
-/**
- * @providesModule LinearGradient
- * @flow
- */
-import React, { Component } from 'react';
-import PropTypes from 'prop-types';
-import { processColor, PointPropType, View, ViewPropTypes } from 'react-native';
-import type { ViewProps } from 'react-native/Libraries/Components/View/ViewPropTypes';
-const deprecatedPropType = require('react-native/Libraries/Utilities/deprecatedPropType.js');
-const ColorPropType = require('react-native/Libraries/StyleSheet/ColorPropType.js');
-
-import NativeLinearGradient from './nativeLinearGradient';
-
-const convertPoint = (name, point) => {
-  if (Array.isArray(point)) {
-    console.warn(
-      `LinearGradient '${name}' property should be an object with fields 'x' and 'y', ` +
-      'Array type is deprecated.'
-    );
-
-    return {
-      x: point[0],
-      y: point[1]
-    };
-  }
-  return point;
-};
-
-type PropsType = {
-  start?: Array<number> | {x: number, y: number};
-  end?: Array<number> | {x: number, y: number};
-  colors: Array<string>;
-  locations?: Array<number>;
-  useAngle?: boolean;
-  angleCenter?: {x: number, y: number};
-  angle?: number;
-} & ViewProps;
-
-export default class LinearGradient extends Component {
-  static propTypes = {
-    start: PropTypes.oneOfType([
-      PointPropType,
-      deprecatedPropType(
-        PropTypes.arrayOf(PropTypes.number),
-        'Use point object with {x, y} instead.'
-      )
-    ]),
-    end: PropTypes.oneOfType([
-      PointPropType,
-      deprecatedPropType(
-        PropTypes.arrayOf(PropTypes.number),
-        'Use point object with {x, y} instead.'
-      )
-    ]),
-    colors: PropTypes.arrayOf(ColorPropType).isRequired,
-    locations: PropTypes.arrayOf(PropTypes.number),
-    useAngle: PropTypes.bool,
-    angleCenter: PointPropType,
-    angle: PropTypes.number,
-    ...ViewPropTypes,
-  };
-  props: PropsType;
-  gradientRef: any;
-
-  static defaultProps = {
-    start: { x: 0.5, y: 0.0 },
-    end: { x: 0.5, y: 1.0 },
-  };
-
-  setNativeProps(props: PropsType) {
-    this.gradientRef.setNativeProps(props);
-  }
-
-  render() {
-    const {
-      start,
-      end,
-      colors,
-      locations,
-      useAngle,
-      angleCenter,
-      angle,
-      ...otherProps
-    } = this.props;
-    if ((colors && locations) && (colors.length !== locations.length)) {
-      console.warn('LinearGradient colors and locations props should be arrays of the same length');
-    }
-
-    return (
-      <NativeLinearGradient
-        ref={(component) => { this.gradientRef = component; }}
-        {...otherProps}
-        startPoint={convertPoint('start', start)}
-        endPoint={convertPoint('end', end)}
-        colors={colors.map(processColor)}
-        locations={locations ? locations.slice(0, colors.length) : null}
-        useAngle={useAngle}
-        angleCenter={convertPoint('angleCenter', angleCenter)}
-        angle={angle}
-      />
-    );
-  }
-}
--- a/node_modules/@shoutem/ui/node_modules/react-native-linear-gradient/index.js
+++ b/node_modules/@shoutem/ui/node_modules/react-native-linear-gradient/index.js
@@ -1,9 +0,0 @@
-import { Platform } from "react-native";
-import LinearGradientIos from "./index.ios.js";
-import LinearGradientAndroid from "./index.android.js";
-
-const LinearGradient = Platform.OS === "ios"
-  ? LinearGradientIos
-  : LinearGradientAndroid;
-
-export default LinearGradient;
deleted file mode 100644
--- a/node_modules/@shoutem/ui/node_modules/react-native-linear-gradient/index.windows.js
+++ /dev/null
@@ -1,51 +0,0 @@
-/**
- * @providesModule LinearGradient
- * @flow
- */
-import React, { Component, PropTypes } from 'react';
-import { processColor, requireNativeComponent, View } from 'react-native';
-
-type PropsType = {
-  start?: Array<number>;
-  end?: Array<number>;
-  colors: Array<string>;
-  locations?: Array<number>;
-} & typeof(View);
-
-export default class LinearGradient extends Component {
-  static propTypes = {
-    start: PropTypes.arrayOf(PropTypes.number),
-    end: PropTypes.arrayOf(PropTypes.number),
-    colors: PropTypes.arrayOf(PropTypes.string).isRequired,
-    locations: PropTypes.arrayOf(PropTypes.number),
-    ...View.propTypes,
-  };
-  props: PropsType;
-  gradientRef: any;
-
-  setNativeProps(props: PropsType) {
-    this.gradientRef.setNativeProps(props);
-  }
-
-  render() {
-    const {
-      colors,
-      locations,
-      ...otherProps
-    } = this.props;
-    if ((colors && locations) && (colors.length !== locations.length)) {
-      console.warn('LinearGradient colors and locations props should be arrays of the same length');
-    }
-
-    return (
-      <NativeLinearGradient
-        ref={(component) => { this.gradientRef = component; }}
-        {...otherProps}
-        colors={colors.map(processColor)}
-        locations={locations ? locations.slice(0, colors.length) : null}
-      />
-    );
-  }
-}
-
-const NativeLinearGradient = requireNativeComponent('BVLinearGradient', null);
deleted file mode 100644
--- a/node_modules/@shoutem/ui/node_modules/react-native-linear-gradient/nativeLinearGradient.js
+++ /dev/null
@@ -1,4 +0,0 @@
-import { requireNativeComponent } from 'react-native';
-
-export default requireNativeComponent('BVLinearGradient', null);
-
deleted file mode 100644
--- a/node_modules/@shoutem/ui/node_modules/react-native-linear-gradient/windows/LinearGradient.Shared/LinearGradient.Shared.projitems
+++ /dev/null
@@ -1,15 +0,0 @@
-﻿<?xml version="1.0" encoding="utf-8"?>
-<Project xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
-  <PropertyGroup>
-    <MSBuildAllProjects>$(MSBuildAllProjects);$(MSBuildThisFileFullPath)</MSBuildAllProjects>
-    <HasSharedItems>true</HasSharedItems>
-    <SharedGUID>1336dbfa-5503-4e97-82ef-f0508b9318ab</SharedGUID>
-  </PropertyGroup>
-  <PropertyGroup Label="Configuration">
-    <Import_RootNamespace>LinearGradient.Shared</Import_RootNamespace>
-  </PropertyGroup>
-  <ItemGroup>
-    <Compile Include="$(MSBuildThisFileDirectory)LinearGradientManager.cs" />
-    <Compile Include="$(MSBuildThisFileDirectory)LinearGradientPackage.cs" />
-  </ItemGroup>
-</Project>
\ No newline at end of file
deleted file mode 100644
--- a/node_modules/@shoutem/ui/node_modules/react-native-linear-gradient/windows/LinearGradient.Shared/LinearGradient.Shared.shproj
+++ /dev/null
@@ -1,13 +0,0 @@
-﻿<?xml version="1.0" encoding="utf-8"?>
-<Project ToolsVersion="14.0" DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
-  <PropertyGroup Label="Globals">
-    <ProjectGuid>1336dbfa-5503-4e97-82ef-f0508b9318ab</ProjectGuid>
-    <MinimumVisualStudioVersion>14.0</MinimumVisualStudioVersion>
-  </PropertyGroup>
-  <Import Project="$(MSBuildExtensionsPath)\$(MSBuildToolsVersion)\Microsoft.Common.props" Condition="Exists('$(MSBuildExtensionsPath)\$(MSBuildToolsVersion)\Microsoft.Common.props')" />
-  <Import Project="$(MSBuildExtensionsPath32)\Microsoft\VisualStudio\v$(VisualStudioVersion)\CodeSharing\Microsoft.CodeSharing.Common.Default.props" />
-  <Import Project="$(MSBuildExtensionsPath32)\Microsoft\VisualStudio\v$(VisualStudioVersion)\CodeSharing\Microsoft.CodeSharing.Common.props" />
-  <PropertyGroup />
-  <Import Project="LinearGradient.Shared.projitems" Label="Shared" />
-  <Import Project="$(MSBuildExtensionsPath32)\Microsoft\VisualStudio\v$(VisualStudioVersion)\CodeSharing\Microsoft.CodeSharing.CSharp.targets" />
-</Project>
deleted file mode 100644
--- a/node_modules/@shoutem/ui/node_modules/react-native-linear-gradient/windows/LinearGradient.Shared/LinearGradientManager.cs
+++ /dev/null
@@ -1,117 +0,0 @@
-﻿using Newtonsoft.Json.Linq;
-using ReactNative.UIManager;
-using ReactNative.UIManager.Annotations;
-using System;
-using System.Collections.Generic;
-#if WINDOWS_UWP
-using Windows.Foundation;
-using Windows.UI.Xaml;
-using Windows.UI.Xaml.Controls;
-using Windows.UI.Xaml.Media;
-#else
-using System.Windows;
-using System.Windows.Controls;
-using System.Windows.Media;
-#endif
-
-namespace LinearGradient
-{
-    class LinearGradientManager : ViewParentManager<Canvas>
-    {
-        public const String REACT_CLASS = "BVLinearGradient";
-        public const String PROP_COLORS = "colors";
-        public const String PROP_LOCATIONS = "locations";
-        public const String PROP_START_POS = "start";
-        public const String PROP_END_POS = "end";
-
-        private LinearGradientBrush _linearGradient;
-        private Canvas _canvas;
-
-        public override string Name
-        {
-            get
-            {
-                return REACT_CLASS;
-            }
-        }
-
-        protected override Canvas CreateViewInstance(ThemedReactContext reactContext)
-        {
-            _canvas = new Canvas();
-            _linearGradient = new LinearGradientBrush
-            {
-                SpreadMethod = GradientSpreadMethod.Pad
-            };
-            _canvas.Background = _linearGradient;
-            return _canvas;
-        }
-
-        [ReactProp(PROP_COLORS)]
-        public void setColors(Canvas linearGradient, List<string> colors)
-        {
-            GradientStopCollection stops = _linearGradient.GradientStops;
-            for (int i = 0; i < colors.Count; i++)
-            {
-                GradientStop stop = i < stops.Count ? stops[i] : new GradientStop();
-                stop.Color = ColorHelpers.Parse(Convert.ToUInt32(colors[i]));
-                if (i < stops.Count) stops.RemoveAt(i);
-                stops.Insert(i, stop);
-            }
-            _linearGradient.GradientStops = stops;
-        }
-
-        [ReactProp(PROP_LOCATIONS)]
-        public void setLocations(Canvas linearGradient, List<float> locations)
-        {
-            if (locations != null)
-            {
-                GradientStopCollection stops = _linearGradient.GradientStops;
-                for (int i = 0; i < locations.Count; i++)
-                {
-                    GradientStop stop = i < stops.Count ? stops[i] : new GradientStop();
-                    stop.Offset = locations[i];
-                    if (i < stops.Count) stops.RemoveAt(i);
-                    stops.Insert(i, stop);
-                }
-                _linearGradient.GradientStops = stops;
-            }
-        }
-
-        [ReactProp(PROP_START_POS)]
-        public void setStartPosition(Canvas linearGradient, JObject startPos)
-        {
-            _linearGradient.StartPoint = new Point(startPos.Value<float>("x"), startPos.Value<float>("y"));
-        }
-
-        [ReactProp(PROP_END_POS)]
-        public void setEndPosition(Canvas linearGradient, JObject endPos)
-        {
-            _linearGradient.EndPoint = new Point(endPos.Value<float>("x"), endPos.Value<float>("y"));
-        }
-
-        public override void AddView(Canvas parent, DependencyObject child, int index)
-        {
-            parent.Children.Insert(index, (UIElement)child);
-        }
-
-        public override int GetChildCount(Canvas parent)
-        {
-            return parent.Children.Count;
-        }
-
-        public override DependencyObject GetChildAt(Canvas parent, int index)
-        {
-            return (FrameworkElement)parent.Children[index];
-        }
-
-        public override void RemoveChildAt(Canvas parent, int index)
-        {
-            parent.Children.RemoveAt(index);
-        }
-
-        public override void RemoveAllChildren(Canvas parent)
-        {
-            parent.Children.Clear();
-        }
-    }
-}
deleted file mode 100644
--- a/node_modules/@shoutem/ui/node_modules/react-native-linear-gradient/windows/LinearGradient.Shared/LinearGradientPackage.cs
+++ /dev/null
@@ -1,29 +0,0 @@
-﻿using System;
-using System.Collections.Generic;
-using ReactNative.Bridge;
-using ReactNative.Modules.Core;
-using ReactNative.UIManager;
-
-namespace LinearGradient
-{
-    public class LinearGradientPackage : IReactPackage
-    {
-        public IReadOnlyList<INativeModule> CreateNativeModules(ReactContext reactContext)
-        {
-            return new List<INativeModule>(0);
-        }
-
-        public IReadOnlyList<Type> CreateJavaScriptModulesConfig()
-        {
-            return new List<Type>(0);
-        }
-
-        public IReadOnlyList<IViewManager> CreateViewManagers(ReactContext reactContext)
-        {
-            return new List<IViewManager>
-            {
-                new LinearGradientManager()
-            };
-        }
-    }
-}
deleted file mode 100644
--- a/node_modules/@shoutem/ui/node_modules/react-native-linear-gradient/windows/LinearGradient.sln
+++ /dev/null
@@ -1,97 +0,0 @@
-﻿
-Microsoft Visual Studio Solution File, Format Version 12.00
-# Visual Studio 14
-VisualStudioVersion = 14.0.25420.1
-MinimumVisualStudioVersion = 10.0.40219.1
-Project("{FAE04EC0-301F-11D3-BF4B-00C04F79EFBC}") = "LinearGradientWPF", "LinearGradientWPF\LinearGradientWPF.csproj", "{B9E0C231-1148-4EA2-B4CD-65DADB760474}"
-EndProject
-Project("{FAE04EC0-301F-11D3-BF4B-00C04F79EFBC}") = "ReactNative.Net46", "..\node_modules\react-native-windows\ReactWindows\ReactNative.Net46\ReactNative.Net46.csproj", "{22CBFF9C-FE36-43E8-A246-266C7635E662}"
-EndProject
-Project("{FAE04EC0-301F-11D3-BF4B-00C04F79EFBC}") = "LinearGradient", "LinearGradient\LinearGradient.csproj", "{BE471D3D-8DF5-4BDB-B020-2C44667443FF}"
-EndProject
-Project("{D954291E-2A0B-460D-934E-DC6B0785DB48}") = "LinearGradient.Shared", "LinearGradient.Shared\LinearGradient.Shared.shproj", "{1336DBFA-5503-4E97-82EF-F0508B9318AB}"
-EndProject
-Project("{FAE04EC0-301F-11D3-BF4B-00C04F79EFBC}") = "ReactNative", "..\node_modules\react-native-windows\ReactWindows\ReactNative\ReactNative.csproj", "{C7673AD5-E3AA-468C-A5FD-FA38154E205C}"
-EndProject
-Project("{8BC9CEB8-8B4A-11D0-8D11-00A0C91BC942}") = "ChakraBridge", "..\node_modules\react-native-windows\ReactWindows\ChakraBridge\ChakraBridge.vcxproj", "{4B72C796-16D5-4E3A-81C0-3E36F531E578}"
-EndProject
-Global
-	GlobalSection(SharedMSBuildProjectFiles) = preSolution
-		LinearGradient.Shared\LinearGradient.Shared.projitems*{1336dbfa-5503-4e97-82ef-f0508b9318ab}*SharedItemsImports = 13
-		..\node_modules\react-native-windows\ReactWindows\ReactNative.Shared\ReactNative.Shared.projitems*{22cbff9c-fe36-43e8-a246-266c7635e662}*SharedItemsImports = 4
-		LinearGradient.Shared\LinearGradient.Shared.projitems*{b9e0c231-1148-4ea2-b4cd-65dadb760474}*SharedItemsImports = 4
-		LinearGradient.Shared\LinearGradient.Shared.projitems*{be471d3d-8df5-4bdb-b020-2c44667443ff}*SharedItemsImports = 4
-		..\node_modules\react-native-windows\ReactWindows\ReactNative.Shared\ReactNative.Shared.projitems*{c7673ad5-e3aa-468c-a5fd-fa38154e205c}*SharedItemsImports = 4
-	EndGlobalSection
-	GlobalSection(SolutionConfigurationPlatforms) = preSolution
-		Debug|ARM = Debug|ARM
-		Debug|x64 = Debug|x64
-		Debug|x86 = Debug|x86
-		Release|ARM = Release|ARM
-		Release|x64 = Release|x64
-		Release|x86 = Release|x86
-	EndGlobalSection
-	GlobalSection(ProjectConfigurationPlatforms) = postSolution
-		{B9E0C231-1148-4EA2-B4CD-65DADB760474}.Debug|ARM.ActiveCfg = Debug|x86
-		{B9E0C231-1148-4EA2-B4CD-65DADB760474}.Debug|x64.ActiveCfg = Debug|x64
-		{B9E0C231-1148-4EA2-B4CD-65DADB760474}.Debug|x64.Build.0 = Debug|x64
-		{B9E0C231-1148-4EA2-B4CD-65DADB760474}.Debug|x86.ActiveCfg = Debug|x86
-		{B9E0C231-1148-4EA2-B4CD-65DADB760474}.Debug|x86.Build.0 = Debug|x86
-		{B9E0C231-1148-4EA2-B4CD-65DADB760474}.Release|ARM.ActiveCfg = Release|x86
-		{B9E0C231-1148-4EA2-B4CD-65DADB760474}.Release|x64.ActiveCfg = Release|x64
-		{B9E0C231-1148-4EA2-B4CD-65DADB760474}.Release|x64.Build.0 = Release|x64
-		{B9E0C231-1148-4EA2-B4CD-65DADB760474}.Release|x86.ActiveCfg = Release|x86
-		{B9E0C231-1148-4EA2-B4CD-65DADB760474}.Release|x86.Build.0 = Release|x86
-		{22CBFF9C-FE36-43E8-A246-266C7635E662}.Debug|ARM.ActiveCfg = Debug|ARM
-		{22CBFF9C-FE36-43E8-A246-266C7635E662}.Debug|ARM.Build.0 = Debug|ARM
-		{22CBFF9C-FE36-43E8-A246-266C7635E662}.Debug|x64.ActiveCfg = Debug|x64
-		{22CBFF9C-FE36-43E8-A246-266C7635E662}.Debug|x64.Build.0 = Debug|x64
-		{22CBFF9C-FE36-43E8-A246-266C7635E662}.Debug|x86.ActiveCfg = Debug|x86
-		{22CBFF9C-FE36-43E8-A246-266C7635E662}.Debug|x86.Build.0 = Debug|x86
-		{22CBFF9C-FE36-43E8-A246-266C7635E662}.Release|ARM.ActiveCfg = Release|ARM
-		{22CBFF9C-FE36-43E8-A246-266C7635E662}.Release|ARM.Build.0 = Release|ARM
-		{22CBFF9C-FE36-43E8-A246-266C7635E662}.Release|x64.ActiveCfg = Release|x64
-		{22CBFF9C-FE36-43E8-A246-266C7635E662}.Release|x64.Build.0 = Release|x64
-		{22CBFF9C-FE36-43E8-A246-266C7635E662}.Release|x86.ActiveCfg = Release|x86
-		{22CBFF9C-FE36-43E8-A246-266C7635E662}.Release|x86.Build.0 = Release|x86
-		{BE471D3D-8DF5-4BDB-B020-2C44667443FF}.Debug|ARM.ActiveCfg = Debug|ARM
-		{BE471D3D-8DF5-4BDB-B020-2C44667443FF}.Debug|ARM.Build.0 = Debug|ARM
-		{BE471D3D-8DF5-4BDB-B020-2C44667443FF}.Debug|x64.ActiveCfg = Debug|x64
-		{BE471D3D-8DF5-4BDB-B020-2C44667443FF}.Debug|x64.Build.0 = Debug|x64
-		{BE471D3D-8DF5-4BDB-B020-2C44667443FF}.Debug|x86.ActiveCfg = Debug|x86
-		{BE471D3D-8DF5-4BDB-B020-2C44667443FF}.Debug|x86.Build.0 = Debug|x86
-		{BE471D3D-8DF5-4BDB-B020-2C44667443FF}.Release|ARM.ActiveCfg = Release|ARM
-		{BE471D3D-8DF5-4BDB-B020-2C44667443FF}.Release|ARM.Build.0 = Release|ARM
-		{BE471D3D-8DF5-4BDB-B020-2C44667443FF}.Release|x64.ActiveCfg = Release|x64
-		{BE471D3D-8DF5-4BDB-B020-2C44667443FF}.Release|x64.Build.0 = Release|x64
-		{BE471D3D-8DF5-4BDB-B020-2C44667443FF}.Release|x86.ActiveCfg = Release|x86
-		{BE471D3D-8DF5-4BDB-B020-2C44667443FF}.Release|x86.Build.0 = Release|x86
-		{C7673AD5-E3AA-468C-A5FD-FA38154E205C}.Debug|ARM.ActiveCfg = Debug|ARM
-		{C7673AD5-E3AA-468C-A5FD-FA38154E205C}.Debug|ARM.Build.0 = Debug|ARM
-		{C7673AD5-E3AA-468C-A5FD-FA38154E205C}.Debug|x64.ActiveCfg = Debug|x64
-		{C7673AD5-E3AA-468C-A5FD-FA38154E205C}.Debug|x64.Build.0 = Debug|x64
-		{C7673AD5-E3AA-468C-A5FD-FA38154E205C}.Debug|x86.ActiveCfg = Debug|x86
-		{C7673AD5-E3AA-468C-A5FD-FA38154E205C}.Debug|x86.Build.0 = Debug|x86
-		{C7673AD5-E3AA-468C-A5FD-FA38154E205C}.Release|ARM.ActiveCfg = Release|ARM
-		{C7673AD5-E3AA-468C-A5FD-FA38154E205C}.Release|ARM.Build.0 = Release|ARM
-		{C7673AD5-E3AA-468C-A5FD-FA38154E205C}.Release|x64.ActiveCfg = Release|x64
-		{C7673AD5-E3AA-468C-A5FD-FA38154E205C}.Release|x64.Build.0 = Release|x64
-		{C7673AD5-E3AA-468C-A5FD-FA38154E205C}.Release|x86.ActiveCfg = Release|x86
-		{C7673AD5-E3AA-468C-A5FD-FA38154E205C}.Release|x86.Build.0 = Release|x86
-		{4B72C796-16D5-4E3A-81C0-3E36F531E578}.Debug|ARM.ActiveCfg = Debug|ARM
-		{4B72C796-16D5-4E3A-81C0-3E36F531E578}.Debug|ARM.Build.0 = Debug|ARM
-		{4B72C796-16D5-4E3A-81C0-3E36F531E578}.Debug|x64.ActiveCfg = Debug|x64
-		{4B72C796-16D5-4E3A-81C0-3E36F531E578}.Debug|x64.Build.0 = Debug|x64
-		{4B72C796-16D5-4E3A-81C0-3E36F531E578}.Debug|x86.ActiveCfg = Debug|Win32
-		{4B72C796-16D5-4E3A-81C0-3E36F531E578}.Debug|x86.Build.0 = Debug|Win32
-		{4B72C796-16D5-4E3A-81C0-3E36F531E578}.Release|ARM.ActiveCfg = Release|ARM
-		{4B72C796-16D5-4E3A-81C0-3E36F531E578}.Release|ARM.Build.0 = Release|ARM
-		{4B72C796-16D5-4E3A-81C0-3E36F531E578}.Release|x64.ActiveCfg = Release|x64
-		{4B72C796-16D5-4E3A-81C0-3E36F531E578}.Release|x64.Build.0 = Release|x64
-		{4B72C796-16D5-4E3A-81C0-3E36F531E578}.Release|x86.ActiveCfg = Release|Win32
-		{4B72C796-16D5-4E3A-81C0-3E36F531E578}.Release|x86.Build.0 = Release|Win32
-	EndGlobalSection
-	GlobalSection(SolutionProperties) = preSolution
-		HideSolutionNode = FALSE
-	EndGlobalSection
-EndGlobal
deleted file mode 100644
--- a/node_modules/@shoutem/ui/node_modules/react-native-linear-gradient/windows/LinearGradient/LinearGradient.csproj
+++ /dev/null
@@ -1,112 +0,0 @@
-﻿<?xml version="1.0" encoding="utf-8"?>
-<Project ToolsVersion="14.0" DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
-  <Import Project="$(MSBuildExtensionsPath)\$(MSBuildToolsVersion)\Microsoft.Common.props" Condition="Exists('$(MSBuildExtensionsPath)\$(MSBuildToolsVersion)\Microsoft.Common.props')" />
-  <PropertyGroup>
-    <Configuration Condition=" '$(Configuration)' == '' ">Debug</Configuration>
-    <Platform Condition=" '$(Platform)' == '' ">x64</Platform>
-    <ProjectGuid>{BE471D3D-8DF5-4BDB-B020-2C44667443FF}</ProjectGuid>
-    <OutputType>Library</OutputType>
-    <AppDesignerFolder>Properties</AppDesignerFolder>
-    <RootNamespace>LinearGradient</RootNamespace>
-    <AssemblyName>LinearGradient</AssemblyName>
-    <DefaultLanguage>en-US</DefaultLanguage>
-    <TargetPlatformIdentifier>UAP</TargetPlatformIdentifier>
-    <TargetPlatformVersion>10.0.10586.0</TargetPlatformVersion>
-    <TargetPlatformMinVersion>10.0.10240.0</TargetPlatformMinVersion>
-    <MinimumVisualStudioVersion>14</MinimumVisualStudioVersion>
-    <FileAlignment>512</FileAlignment>
-    <ProjectTypeGuids>{A5A43C5B-DE2A-4C0C-9213-0A381AF9435A};{FAE04EC0-301F-11D3-BF4B-00C04F79EFBC}</ProjectTypeGuids>
-  </PropertyGroup>
-  <PropertyGroup Condition="'$(Configuration)|$(Platform)' == 'Debug|x86'">
-    <PlatformTarget>x86</PlatformTarget>
-    <DebugSymbols>true</DebugSymbols>
-    <OutputPath>bin\x86\Debug\</OutputPath>
-    <DefineConstants>DEBUG;TRACE;NETFX_CORE;WINDOWS_UWP</DefineConstants>
-    <NoWarn>;2008</NoWarn>
-    <DebugType>full</DebugType>
-    <PlatformTarget>x86</PlatformTarget>
-    <UseVSHostingProcess>false</UseVSHostingProcess>
-    <ErrorReport>prompt</ErrorReport>
-  </PropertyGroup>
-  <PropertyGroup Condition="'$(Configuration)|$(Platform)' == 'Release|x86'">
-    <PlatformTarget>x86</PlatformTarget>
-    <OutputPath>bin\x86\Release\</OutputPath>
-    <DefineConstants>TRACE;NETFX_CORE;WINDOWS_UWP</DefineConstants>
-    <Optimize>true</Optimize>
-    <NoWarn>;2008</NoWarn>
-    <DebugType>pdbonly</DebugType>
-    <PlatformTarget>x86</PlatformTarget>
-    <UseVSHostingProcess>false</UseVSHostingProcess>
-    <ErrorReport>prompt</ErrorReport>
-  </PropertyGroup>
-  <PropertyGroup Condition="'$(Configuration)|$(Platform)' == 'Debug|ARM'">
-    <PlatformTarget>ARM</PlatformTarget>
-    <DebugSymbols>true</DebugSymbols>
-    <OutputPath>bin\ARM\Debug\</OutputPath>
-    <DefineConstants>DEBUG;TRACE;NETFX_CORE;WINDOWS_UWP</DefineConstants>
-    <NoWarn>;2008</NoWarn>
-    <DebugType>full</DebugType>
-    <PlatformTarget>ARM</PlatformTarget>
-    <UseVSHostingProcess>false</UseVSHostingProcess>
-    <ErrorReport>prompt</ErrorReport>
-  </PropertyGroup>
-  <PropertyGroup Condition="'$(Configuration)|$(Platform)' == 'Release|ARM'">
-    <PlatformTarget>ARM</PlatformTarget>
-    <OutputPath>bin\ARM\Release\</OutputPath>
-    <DefineConstants>TRACE;NETFX_CORE;WINDOWS_UWP</DefineConstants>
-    <Optimize>true</Optimize>
-    <NoWarn>;2008</NoWarn>
-    <DebugType>pdbonly</DebugType>
-    <PlatformTarget>ARM</PlatformTarget>
-    <UseVSHostingProcess>false</UseVSHostingProcess>
-    <ErrorReport>prompt</ErrorReport>
-  </PropertyGroup>
-  <PropertyGroup Condition="'$(Configuration)|$(Platform)' == 'Debug|x64'">
-    <PlatformTarget>x64</PlatformTarget>
-    <DebugSymbols>true</DebugSymbols>
-    <OutputPath>bin\x64\Debug\</OutputPath>
-    <DefineConstants>DEBUG;TRACE;NETFX_CORE;WINDOWS_UWP</DefineConstants>
-    <NoWarn>;2008</NoWarn>
-    <DebugType>full</DebugType>
-    <PlatformTarget>x64</PlatformTarget>
-    <UseVSHostingProcess>false</UseVSHostingProcess>
-    <ErrorReport>prompt</ErrorReport>
-  </PropertyGroup>
-  <PropertyGroup Condition="'$(Configuration)|$(Platform)' == 'Release|x64'">
-    <PlatformTarget>x64</PlatformTarget>
-    <OutputPath>bin\x64\Release\</OutputPath>
-    <DefineConstants>TRACE;NETFX_CORE;WINDOWS_UWP</DefineConstants>
-    <Optimize>true</Optimize>
-    <NoWarn>;2008</NoWarn>
-    <DebugType>pdbonly</DebugType>
-    <PlatformTarget>x64</PlatformTarget>
-    <UseVSHostingProcess>false</UseVSHostingProcess>
-    <ErrorReport>prompt</ErrorReport>
-  </PropertyGroup>
-  <ItemGroup>
-    <!-- A reference to the entire .Net Framework and Windows SDK are automatically included -->
-    <None Include="project.json" />
-  </ItemGroup>
-  <ItemGroup>
-    <Compile Include="Properties\AssemblyInfo.cs" />
-    <EmbeddedResource Include="Properties\LinearGradient.rd.xml" />
-  </ItemGroup>
-  <ItemGroup>
-    <ProjectReference Include="..\..\node_modules\react-native-windows\ReactWindows\ReactNative\ReactNative.csproj">
-      <Project>{c7673ad5-e3aa-468c-a5fd-fa38154e205c}</Project>
-      <Name>ReactNative</Name>
-    </ProjectReference>
-  </ItemGroup>
-  <Import Project="..\LinearGradient.Shared\LinearGradient.Shared.projitems" Label="Shared" />
-  <PropertyGroup Condition=" '$(VisualStudioVersion)' == '' or '$(VisualStudioVersion)' &lt; '14.0' ">
-    <VisualStudioVersion>14.0</VisualStudioVersion>
-  </PropertyGroup>
-  <Import Project="$(MSBuildExtensionsPath)\Microsoft\WindowsXaml\v$(VisualStudioVersion)\Microsoft.Windows.UI.Xaml.CSharp.targets" />
-  <!-- To modify your build process, add your task inside one of the targets below and uncomment it. 
-       Other similar extension points exist, see Microsoft.Common.targets.
-  <Target Name="BeforeBuild">
-  </Target>
-  <Target Name="AfterBuild">
-  </Target>
-  -->
-</Project>
\ No newline at end of file
deleted file mode 100644
--- a/node_modules/@shoutem/ui/node_modules/react-native-linear-gradient/windows/LinearGradient/LinearGradientManager.cs
+++ /dev/null
@@ -1,110 +0,0 @@
-﻿using Newtonsoft.Json.Linq;
-using ReactNative.UIManager;
-using ReactNative.UIManager.Annotations;
-using System;
-using System.Collections.Generic;
-using System.Windows;
-using System.Windows.Controls;
-using System.Windows.Media;
-
-namespace LinearGradient
-{
-    class LinearGradientManager : ViewParentManager<Canvas>
-    {
-        public const String REACT_CLASS = "BVLinearGradient";
-        public const String PROP_COLORS = "colors";
-        public const String PROP_LOCATIONS = "locations";
-        public const String PROP_START_POS = "start";
-        public const String PROP_END_POS = "end";
-
-        private LinearGradientBrush _linearGradient;
-        private Canvas _canvas;
-
-        public override string Name
-        {
-            get
-            {
-                return REACT_CLASS;
-            }
-        }
-
-        protected override Canvas CreateViewInstance(ThemedReactContext reactContext)
-        {
-            _canvas = new Canvas();
-            _linearGradient = new LinearGradientBrush
-            {
-                SpreadMethod = GradientSpreadMethod.Pad
-            };
-            _canvas.Background = _linearGradient;
-            return _canvas;
-        }
-
-        [ReactProp(PROP_COLORS)]
-        public void setColors(Canvas linearGradient, List<string> colors)
-        {
-            GradientStopCollection stops = _linearGradient.GradientStops;
-            for (int i = 0; i < colors.Count; i++)
-            {
-                GradientStop stop = i < stops.Count ? stops[i] : new GradientStop();
-                stop.Color = ColorHelpers.Parse(Convert.ToUInt32(colors[i]));
-                if (i < stops.Count) stops.RemoveAt(i);
-                stops.Insert(i, stop);
-            }
-            _linearGradient.GradientStops = stops;
-        }
-
-        [ReactProp(PROP_LOCATIONS)]
-        public void setLocations(Canvas linearGradient, List<float> locations)
-        {
-            if (locations != null)
-            {
-                GradientStopCollection stops = _linearGradient.GradientStops;
-                for (int i = 0; i < locations.Count; i++)
-                {
-                    GradientStop stop = i < stops.Count ? stops[i] : new GradientStop();
-                    stop.Offset = locations[i];
-                    if (i < stops.Count) stops.RemoveAt(i);
-                    stops.Insert(i, stop);
-                }
-                _linearGradient.GradientStops = stops;
-            }
-        }
-
-        [ReactProp(PROP_START_POS)]
-        public void setStartPosition(Canvas linearGradient, JObject startPos)
-        {
-            _linearGradient.StartPoint = new Point(startPos.Value<float>("x"), startPos.Value<float>("y"));
-        }
-
-        [ReactProp(PROP_END_POS)]
-        public void setEndPosition(Canvas linearGradient, JObject endPos)
-        {
-            _linearGradient.EndPoint = new Point(endPos.Value<float>("x"), endPos.Value<float>("y"));
-        }
-
-        public override void AddView(Canvas parent, DependencyObject child, int index)
-        {
-            parent.Children.Insert(index, (UIElement)child);
-        }
-
-        public override int GetChildCount(Canvas parent)
-        {
-            return parent.Children.Count;
-        }
-
-        public override DependencyObject GetChildAt(Canvas parent, int index)
-        {
-            return (FrameworkElement)parent.Children[index];
-        }
-
-        public override void RemoveChildAt(Canvas parent, int index)
-        {
-            parent.Children.RemoveAt(index);
-        }
-
-        public override void RemoveAllChildren(Canvas parent)
-        {
-            parent.Children.Clear();
-        }
-    }
-}
deleted file mode 100644
--- a/node_modules/@shoutem/ui/node_modules/react-native-linear-gradient/windows/LinearGradient/LinearGradientPackage.cs
+++ /dev/null
@@ -1,29 +0,0 @@
-﻿using System;
-using System.Collections.Generic;
-using ReactNative.Bridge;
-using ReactNative.Modules.Core;
-using ReactNative.UIManager;
-
-namespace LinearGradient
-{
-    public class LinearGradientPackage : IReactPackage
-    {
-        public IReadOnlyList<INativeModule> CreateNativeModules(ReactContext reactContext)
-        {
-            return new List<INativeModule>(0);
-        }
-
-        public IReadOnlyList<Type> CreateJavaScriptModulesConfig()
-        {
-            return new List<Type>(0);
-        }
-
-        public IReadOnlyList<IViewManager> CreateViewManagers(ReactContext reactContext)
-        {
-            return new List<IViewManager>
-            {
-                new LinearGradientManager()
-            };
-        }
-    }
-}
deleted file mode 100644
--- a/node_modules/@shoutem/ui/node_modules/react-native-linear-gradient/windows/LinearGradient/Properties/AssemblyInfo.cs
+++ /dev/null
@@ -1,29 +0,0 @@
-﻿using System.Reflection;
-using System.Runtime.CompilerServices;
-using System.Runtime.InteropServices;
-
-// General Information about an assembly is controlled through the following 
-// set of attributes. Change these attribute values to modify the information
-// associated with an assembly.
-[assembly: AssemblyTitle("LinearGradient")]
-[assembly: AssemblyDescription("")]
-[assembly: AssemblyConfiguration("")]
-[assembly: AssemblyCompany("BlueJeans Network")]
-[assembly: AssemblyProduct("LinearGradient")]
-[assembly: AssemblyCopyright("Copyright © BlueJeans Network 2017")]
-[assembly: AssemblyTrademark("")]
-[assembly: AssemblyCulture("")]
-
-// Version information for an assembly consists of the following four values:
-//
-//      Major Version
-//      Minor Version 
-//      Build Number
-//      Revision
-//
-// You can specify all the values or you can default the Build and Revision Numbers 
-// by using the '*' as shown below:
-// [assembly: AssemblyVersion("1.0.*")]
-[assembly: AssemblyVersion("1.0.0.0")]
-[assembly: AssemblyFileVersion("1.0.0.0")]
-[assembly: ComVisible(false)]
\ No newline at end of file
deleted file mode 100644
--- a/node_modules/@shoutem/ui/node_modules/react-native-linear-gradient/windows/LinearGradient/Properties/LinearGradient.rd.xml
+++ /dev/null
@@ -1,33 +0,0 @@
-<?xml version="1.0" encoding="utf-8"?>
-<!--
-    This file contains Runtime Directives, specifications about types your application accesses
-    through reflection and other dynamic code patterns. Runtime Directives are used to control the
-    .NET Native optimizer and ensure that it does not remove code accessed by your library. If your
-    library does not do any reflection, then you generally do not need to edit this file. However,
-    if your library reflects over types, especially types passed to it or derived from its types,
-    then you should write Runtime Directives.
-
-    The most common use of reflection in libraries is to discover information about types passed
-    to the library. Runtime Directives have three ways to express requirements on types passed to
-    your library.
-
-    1.  Parameter, GenericParameter, TypeParameter, TypeEnumerableParameter
-        Use these directives to reflect over types passed as a parameter.
-
-    2.  SubTypes
-        Use a SubTypes directive to reflect over types derived from another type.
-
-    3.  AttributeImplies
-        Use an AttributeImplies directive to indicate that your library needs to reflect over
-        types or methods decorated with an attribute.
-
-    For more information on writing Runtime Directives for libraries, please visit
-    http://go.microsoft.com/fwlink/?LinkID=391919
--->
-<Directives xmlns="http://schemas.microsoft.com/netfx/2013/01/metadata">
-  <Library Name="LinearGradient">
-
-  	<!-- add directives for your library here -->
-
-  </Library>
-</Directives>
deleted file mode 100644
--- a/node_modules/@shoutem/ui/node_modules/react-native-linear-gradient/windows/LinearGradient/project.json
+++ /dev/null
@@ -1,17 +0,0 @@
-﻿{
-  "dependencies": {
-    "Microsoft.NETCore.UniversalWindowsPlatform": "5.2.2",
-    "Newtonsoft.Json": "9.0.1"
-  },
-  "frameworks": {
-    "uap10.0": {}
-  },
-  "runtimes": {
-    "win10-arm": {},
-    "win10-arm-aot": {},
-    "win10-x86": {},
-    "win10-x86-aot": {},
-    "win10-x64": {},
-    "win10-x64-aot": {}
-  }
-}
\ No newline at end of file
deleted file mode 100644
--- a/node_modules/@shoutem/ui/node_modules/react-native-linear-gradient/windows/LinearGradientWPF/LinearGradientWPF.csproj
+++ /dev/null
@@ -1,71 +0,0 @@
-﻿<?xml version="1.0" encoding="utf-8"?>
-<Project ToolsVersion="14.0" DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
-  <Import Project="$(MSBuildExtensionsPath)\$(MSBuildToolsVersion)\Microsoft.Common.props" Condition="Exists('$(MSBuildExtensionsPath)\$(MSBuildToolsVersion)\Microsoft.Common.props')" />
-  <PropertyGroup>
-    <Configuration Condition=" '$(Configuration)' == '' ">Debug</Configuration>
-    <Platform Condition=" '$(Platform)' == '' ">x64</Platform>
-    <ProjectGuid>{B9E0C231-1148-4EA2-B4CD-65DADB760474}</ProjectGuid>
-    <OutputType>Library</OutputType>
-    <AppDesignerFolder>Properties</AppDesignerFolder>
-    <RootNamespace>LinearGradient</RootNamespace>
-    <AssemblyName>LinearGradient</AssemblyName>
-    <TargetFrameworkVersion>v4.6</TargetFrameworkVersion>
-    <FileAlignment>512</FileAlignment>
-  </PropertyGroup>
-  <PropertyGroup Condition="'$(Configuration)|$(Platform)' == 'Debug|x86'">
-    <PlatformTarget>x86</PlatformTarget>
-    <OutputPath>bin\x86\Debug\</OutputPath>
-  </PropertyGroup>
-  <PropertyGroup Condition="'$(Configuration)|$(Platform)' == 'Release|x86'">
-    <PlatformTarget>x86</PlatformTarget>
-    <OutputPath>bin\x86\Release\</OutputPath>
-  </PropertyGroup>
-  <PropertyGroup Condition="'$(Configuration)|$(Platform)' == 'Debug|x64'">
-    <PlatformTarget>x64</PlatformTarget>
-    <OutputPath>bin\x64\Debug\</OutputPath>
-  </PropertyGroup>
-  <PropertyGroup Condition="'$(Configuration)|$(Platform)' == 'Release|x64'">
-    <PlatformTarget>x64</PlatformTarget>
-    <OutputPath>bin\x64\Release\</OutputPath>
-  </PropertyGroup>
-  <ItemGroup>
-    <Reference Include="Newtonsoft.Json, Version=9.0.0.0, Culture=neutral, PublicKeyToken=30ad4fe6b2a6aeed, processorArchitecture=MSIL">
-      <SpecificVersion>False</SpecificVersion>
-      <HintPath>$(SolutionDir)\packages\Newtonsoft.Json.9.0.1\lib\net45\Newtonsoft.Json.dll</HintPath>
-      <Private>True</Private>
-    </Reference>
-    <Reference Include="PresentationCore" />
-    <Reference Include="PresentationFramework" />
-    <Reference Include="System" />
-    <Reference Include="System.Core" />
-    <Reference Include="System.Xaml" />
-    <Reference Include="System.Xml.Linq" />
-    <Reference Include="System.Data.DataSetExtensions" />
-    <Reference Include="Microsoft.CSharp" />
-    <Reference Include="System.Data" />
-    <Reference Include="System.Net.Http" />
-    <Reference Include="System.Xml" />
-    <Reference Include="WindowsBase" />
-  </ItemGroup>
-  <ItemGroup>
-    <Compile Include="Properties\AssemblyInfo.cs" />
-  </ItemGroup>
-  <ItemGroup>
-    <ProjectReference Include="$(SolutionDir)\..\node_modules\react-native-windows\ReactWindows\ReactNative.Net46\ReactNative.Net46.csproj">
-      <Project>{22cbff9c-fe36-43e8-a246-266c7635e662}</Project>
-      <Name>ReactNative.Net46</Name>
-    </ProjectReference>
-  </ItemGroup>
-  <ItemGroup>
-    <None Include="packages.config" />
-  </ItemGroup>
-  <Import Project="..\LinearGradient.Shared\LinearGradient.Shared.projitems" Label="Shared" />
-  <Import Project="$(MSBuildToolsPath)\Microsoft.CSharp.targets" />
-  <!-- To modify your build process, add your task inside one of the targets below and uncomment it.
-       Other similar extension points exist, see Microsoft.Common.targets.
-  <Target Name="BeforeBuild">
-  </Target>
-  <Target Name="AfterBuild">
-  </Target>
-  -->
-</Project>
\ No newline at end of file
deleted file mode 100644
--- a/node_modules/@shoutem/ui/node_modules/react-native-linear-gradient/windows/LinearGradientWPF/Properties/AssemblyInfo.cs
+++ /dev/null
@@ -1,36 +0,0 @@
-﻿using System.Reflection;
-using System.Runtime.CompilerServices;
-using System.Runtime.InteropServices;
-
-// General Information about an assembly is controlled through the following 
-// set of attributes. Change these attribute values to modify the information
-// associated with an assembly.
-[assembly: AssemblyTitle("LinearGradient")]
-[assembly: AssemblyDescription("")]
-[assembly: AssemblyConfiguration("")]
-[assembly: AssemblyCompany("")]
-[assembly: AssemblyProduct("LinearGradient")]
-[assembly: AssemblyCopyright("Copyright ©  2016")]
-[assembly: AssemblyTrademark("")]
-[assembly: AssemblyCulture("")]
-
-// Setting ComVisible to false makes the types in this assembly not visible 
-// to COM components.  If you need to access a type in this assembly from 
-// COM, set the ComVisible attribute to true on that type.
-[assembly: ComVisible(false)]
-
-// The following GUID is for the ID of the typelib if this project is exposed to COM
-[assembly: Guid("b9e0c231-1148-4ea2-b4cd-65dadb760474")]
-
-// Version information for an assembly consists of the following four values:
-//
-//      Major Version
-//      Minor Version 
-//      Build Number
-//      Revision
-//
-// You can specify all the values or you can default the Build and Revision Numbers 
-// by using the '*' as shown below:
-// [assembly: AssemblyVersion("1.0.*")]
-[assembly: AssemblyVersion("1.0.0.0")]
-[assembly: AssemblyFileVersion("1.0.0.0")]
deleted file mode 100644
--- a/node_modules/@shoutem/ui/node_modules/react-native-linear-gradient/windows/LinearGradientWPF/packages.config
+++ /dev/null
@@ -1,4 +0,0 @@
-﻿<?xml version="1.0" encoding="utf-8"?>
-<packages>
-  <package id="Newtonsoft.Json" version="9.0.1" targetFramework="net46" />
-</packages>
\ No newline at end of file
